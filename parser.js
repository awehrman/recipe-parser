module.exports = /*
 * Generated by PEG.js 0.10.0.
 *
 * http://pegjs.org/
 */
(function() {
  "use strict";

  function peg$subclass(child, parent) {
    function ctor() { this.constructor = child; }
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function peg$SyntaxError(message, expected, found, location) {
    this.message  = message;
    this.expected = expected;
    this.found    = found;
    this.location = location;
    this.name     = "SyntaxError";

    if (typeof Error.captureStackTrace === "function") {
      Error.captureStackTrace(this, peg$SyntaxError);
    }
  }

  peg$subclass(peg$SyntaxError, Error);

  peg$SyntaxError.buildMessage = function(expected, found) {
    var DESCRIBE_EXPECTATION_FNS = {
          literal: function(expectation) {
            return "\"" + literalEscape(expectation.text) + "\"";
          },

          "class": function(expectation) {
            var escapedParts = "",
                i;

            for (i = 0; i < expectation.parts.length; i++) {
              escapedParts += expectation.parts[i] instanceof Array
                ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1])
                : classEscape(expectation.parts[i]);
            }

            return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
          },

          any: function(expectation) {
            return "any character";
          },

          end: function(expectation) {
            return "end of input";
          },

          other: function(expectation) {
            return expectation.description;
          }
        };

    function hex(ch) {
      return ch.charCodeAt(0).toString(16).toUpperCase();
    }

    function literalEscape(s) {
      return s
        .replace(/\\/g, '\\\\')
        .replace(/"/g,  '\\"')
        .replace(/\0/g, '\\0')
        .replace(/\t/g, '\\t')
        .replace(/\n/g, '\\n')
        .replace(/\r/g, '\\r')
        .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
        .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
    }

    function classEscape(s) {
      return s
        .replace(/\\/g, '\\\\')
        .replace(/\]/g, '\\]')
        .replace(/\^/g, '\\^')
        .replace(/-/g,  '\\-')
        .replace(/\0/g, '\\0')
        .replace(/\t/g, '\\t')
        .replace(/\n/g, '\\n')
        .replace(/\r/g, '\\r')
        .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
        .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
    }

    function describeExpectation(expectation) {
      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
    }

    function describeExpected(expected) {
      var descriptions = new Array(expected.length),
          i, j;

      for (i = 0; i < expected.length; i++) {
        descriptions[i] = describeExpectation(expected[i]);
      }

      descriptions.sort();

      if (descriptions.length > 0) {
        for (i = 1, j = 1; i < descriptions.length; i++) {
          if (descriptions[i - 1] !== descriptions[i]) {
            descriptions[j] = descriptions[i];
            j++;
          }
        }
        descriptions.length = j;
      }

      switch (descriptions.length) {
        case 1:
          return descriptions[0];

        case 2:
          return descriptions[0] + " or " + descriptions[1];

        default:
          return descriptions.slice(0, -1).join(", ")
            + ", or "
            + descriptions[descriptions.length - 1];
      }
    }

    function describeFound(found) {
      return found ? "\"" + literalEscape(found) + "\"" : "end of input";
    }

    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
  };

  function peg$parse(input, options) {
    options = options !== void 0 ? options : {};

    var peg$FAILED = {},

        peg$startRuleFunctions = { start: peg$parsestart },
        peg$startRuleFunction  = peg$parsestart,

        peg$c0 = /^[\n]/,
        peg$c1 = peg$classExpectation(["\n"], false, false),
        peg$c2 = function(amount, unitDesc, unit, container, ingredientDesc, ingredient, comment) {
              return {
                amount: amount,
                unitDesc: unitDesc,
                unit: unit,
                container: container,
                ingredientDesc: ingredientDesc,
                ingredient: ingredient,
                comment: comment
              };
          },
        peg$c3 = function(first, second, third) {
             let descriptions = [];
             (first) ? descriptions.push(first) : null;
             (second) ? descriptions.push(second) : null;
             (third) ? descriptions.push(third) : null;

             return descriptions;
           },
        peg$c4 = " ",
        peg$c5 = peg$literalExpectation(" ", false),
        peg$c6 = /^[\t]/,
        peg$c7 = peg$classExpectation(["\t"], false, false),
        peg$c8 = /^[.]/,
        peg$c9 = peg$classExpectation(["."], false, false),
        peg$c10 = /^[\/]/,
        peg$c11 = peg$classExpectation(["/"], false, false),
        peg$c12 = /^[0-9]/,
        peg$c13 = peg$classExpectation([["0", "9"]], false, false),
        peg$c14 = "\xBD",
        peg$c15 = peg$literalExpectation("\xBD", false),
        peg$c16 = function() { return '1/2'; },
        peg$c17 = "\u2153",
        peg$c18 = peg$literalExpectation("\u2153", false),
        peg$c19 = function() { return '1/3'; },
        peg$c20 = "\u2154",
        peg$c21 = peg$literalExpectation("\u2154", false),
        peg$c22 = function() { return '2/3'; },
        peg$c23 = "\xBC",
        peg$c24 = peg$literalExpectation("\xBC", false),
        peg$c25 = function() { return '1/4'; },
        peg$c26 = "\xBE",
        peg$c27 = peg$literalExpectation("\xBE", false),
        peg$c28 = function() { return '3/4'; },
        peg$c29 = "\u2155",
        peg$c30 = peg$literalExpectation("\u2155", false),
        peg$c31 = function() { return '1/5'; },
        peg$c32 = "\u2156",
        peg$c33 = peg$literalExpectation("\u2156", false),
        peg$c34 = function() { return '2/5'; },
        peg$c35 = "\u2157",
        peg$c36 = peg$literalExpectation("\u2157", false),
        peg$c37 = function() { return '3/5'; },
        peg$c38 = "\u2158",
        peg$c39 = peg$literalExpectation("\u2158", false),
        peg$c40 = function() { return '4/5'; },
        peg$c41 = "\u2159",
        peg$c42 = peg$literalExpectation("\u2159", false),
        peg$c43 = function() { return '1/6'; },
        peg$c44 = "\u215A",
        peg$c45 = peg$literalExpectation("\u215A", false),
        peg$c46 = function() { return '5/6'; },
        peg$c47 = "\u2150",
        peg$c48 = peg$literalExpectation("\u2150", false),
        peg$c49 = function() { return '1/7'; },
        peg$c50 = "\u215B",
        peg$c51 = peg$literalExpectation("\u215B", false),
        peg$c52 = function() { return '1/8'; },
        peg$c53 = "\u215C",
        peg$c54 = peg$literalExpectation("\u215C", false),
        peg$c55 = function() { return '3/8'; },
        peg$c56 = "\u215D",
        peg$c57 = peg$literalExpectation("\u215D", false),
        peg$c58 = function() { return '5/8'; },
        peg$c59 = "\u215E",
        peg$c60 = peg$literalExpectation("\u215E", false),
        peg$c61 = function() { return '7/8'; },
        peg$c62 = "\u2151",
        peg$c63 = peg$literalExpectation("\u2151", false),
        peg$c64 = function() { return '1/9'; },
        peg$c65 = "\u2152",
        peg$c66 = peg$literalExpectation("\u2152", false),
        peg$c67 = function() { return '1/10'; },
        peg$c68 = /^[a-z0-9]/i,
        peg$c69 = peg$classExpectation([["a", "z"], ["0", "9"]], false, true),
        peg$c70 = /^[a-z]/i,
        peg$c71 = peg$classExpectation([["a", "z"]], false, true),
        peg$c72 = /^[\-_]/,
        peg$c73 = peg$classExpectation(["-", "_"], false, false),
        peg$c74 = /^[,]/,
        peg$c75 = peg$classExpectation([","], false, false),
        peg$c76 = /^[!]/,
        peg$c77 = peg$classExpectation(["!"], false, false),
        peg$c78 = /^[?]/,
        peg$c79 = peg$classExpectation(["?"], false, false),
        peg$c80 = "a",
        peg$c81 = peg$literalExpectation("a", false),
        peg$c82 = "an",
        peg$c83 = peg$literalExpectation("an", false),
        peg$c84 = "of",
        peg$c85 = peg$literalExpectation("of", false),
        peg$c86 = "for",
        peg$c87 = peg$literalExpectation("for", false),
        peg$c88 = function(unit, ws) { return unit; },
        peg$c89 = "cups",
        peg$c90 = peg$literalExpectation("cups", true),
        peg$c91 = "cup",
        peg$c92 = peg$literalExpectation("cup", true),
        peg$c93 = "c.",
        peg$c94 = peg$literalExpectation("c.", true),
        peg$c95 = "c",
        peg$c96 = peg$literalExpectation("c", true),
        peg$c97 = "fluid ounces",
        peg$c98 = peg$literalExpectation("fluid ounces", true),
        peg$c99 = "fluid ounce",
        peg$c100 = peg$literalExpectation("fluid ounce", true),
        peg$c101 = "fl. oz.",
        peg$c102 = peg$literalExpectation("fl. oz.", true),
        peg$c103 = "fl oz",
        peg$c104 = peg$literalExpectation("fl oz", true),
        peg$c105 = "gallons",
        peg$c106 = peg$literalExpectation("gallons", true),
        peg$c107 = "gallon",
        peg$c108 = peg$literalExpectation("gallon", true),
        peg$c109 = "gal.",
        peg$c110 = peg$literalExpectation("gal.", true),
        peg$c111 = "gal",
        peg$c112 = peg$literalExpectation("gal", true),
        peg$c113 = "ounces",
        peg$c114 = peg$literalExpectation("ounces", true),
        peg$c115 = "ounce",
        peg$c116 = peg$literalExpectation("ounce", true),
        peg$c117 = "oz.",
        peg$c118 = peg$literalExpectation("oz.", true),
        peg$c119 = "oz",
        peg$c120 = peg$literalExpectation("oz", true),
        peg$c121 = "pints",
        peg$c122 = peg$literalExpectation("pints", true),
        peg$c123 = "pint",
        peg$c124 = peg$literalExpectation("pint", true),
        peg$c125 = "pt.",
        peg$c126 = peg$literalExpectation("pt.", true),
        peg$c127 = "pt",
        peg$c128 = peg$literalExpectation("pt", true),
        peg$c129 = "pounds",
        peg$c130 = peg$literalExpectation("pounds", true),
        peg$c131 = "pound",
        peg$c132 = peg$literalExpectation("pound", true),
        peg$c133 = "lbs.",
        peg$c134 = peg$literalExpectation("lbs.", true),
        peg$c135 = "lbs",
        peg$c136 = peg$literalExpectation("lbs", true),
        peg$c137 = "lb.",
        peg$c138 = peg$literalExpectation("lb.", true),
        peg$c139 = "lb",
        peg$c140 = peg$literalExpectation("lb", true),
        peg$c141 = "quarts",
        peg$c142 = peg$literalExpectation("quarts", true),
        peg$c143 = "quart",
        peg$c144 = peg$literalExpectation("quart", true),
        peg$c145 = "qts.",
        peg$c146 = peg$literalExpectation("qts.", true),
        peg$c147 = "qts",
        peg$c148 = peg$literalExpectation("qts", true),
        peg$c149 = "qt.",
        peg$c150 = peg$literalExpectation("qt.", true),
        peg$c151 = "qt",
        peg$c152 = peg$literalExpectation("qt", true),
        peg$c153 = "tablespoons",
        peg$c154 = peg$literalExpectation("tablespoons", true),
        peg$c155 = "tablespoon",
        peg$c156 = peg$literalExpectation("tablespoon", true),
        peg$c157 = "tbsps",
        peg$c158 = peg$literalExpectation("tbsps", true),
        peg$c159 = "tbsp.",
        peg$c160 = peg$literalExpectation("tbsp.", true),
        peg$c161 = "tbsp",
        peg$c162 = peg$literalExpectation("tbsp", true),
        peg$c163 = "tbs.",
        peg$c164 = peg$literalExpectation("tbs.", true),
        peg$c165 = "tbs",
        peg$c166 = peg$literalExpectation("tbs", true),
        peg$c167 = "tbl",
        peg$c168 = peg$literalExpectation("tbl", true),
        peg$c169 = "T.",
        peg$c170 = peg$literalExpectation("T.", false),
        peg$c171 = "T",
        peg$c172 = peg$literalExpectation("T", false),
        peg$c173 = "teaspoons",
        peg$c174 = peg$literalExpectation("teaspoons", true),
        peg$c175 = "teaspoon",
        peg$c176 = peg$literalExpectation("teaspoon", true),
        peg$c177 = "tsp.",
        peg$c178 = peg$literalExpectation("tsp.", true),
        peg$c179 = "tsp",
        peg$c180 = peg$literalExpectation("tsp", true),
        peg$c181 = "t.",
        peg$c182 = peg$literalExpectation("t.", false),
        peg$c183 = "t",
        peg$c184 = peg$literalExpectation("t", false),
        peg$c185 = "grams",
        peg$c186 = peg$literalExpectation("grams", true),
        peg$c187 = "gram",
        peg$c188 = peg$literalExpectation("gram", true),
        peg$c189 = "gms",
        peg$c190 = peg$literalExpectation("gms", true),
        peg$c191 = "gr.",
        peg$c192 = peg$literalExpectation("gr.", true),
        peg$c193 = "gr",
        peg$c194 = peg$literalExpectation("gr", true),
        peg$c195 = "gm",
        peg$c196 = peg$literalExpectation("gm", true),
        peg$c197 = "g.",
        peg$c198 = peg$literalExpectation("g.", true),
        peg$c199 = "g",
        peg$c200 = peg$literalExpectation("g", true),
        peg$c201 = "kilograms",
        peg$c202 = peg$literalExpectation("kilograms", true),
        peg$c203 = "kilogram",
        peg$c204 = peg$literalExpectation("kilogram", true),
        peg$c205 = "kg.",
        peg$c206 = peg$literalExpectation("kg.", true),
        peg$c207 = "kgs",
        peg$c208 = peg$literalExpectation("kgs", true),
        peg$c209 = "kg",
        peg$c210 = peg$literalExpectation("kg", true),
        peg$c211 = "liters",
        peg$c212 = peg$literalExpectation("liters", true),
        peg$c213 = "litres",
        peg$c214 = peg$literalExpectation("litres", true),
        peg$c215 = "liter",
        peg$c216 = peg$literalExpectation("liter", true),
        peg$c217 = "l.",
        peg$c218 = peg$literalExpectation("l.", true),
        peg$c219 = "l",
        peg$c220 = peg$literalExpectation("l", true),
        peg$c221 = "milligrams",
        peg$c222 = peg$literalExpectation("milligrams", true),
        peg$c223 = "milligram",
        peg$c224 = peg$literalExpectation("milligram", true),
        peg$c225 = "mg.",
        peg$c226 = peg$literalExpectation("mg.", true),
        peg$c227 = "mg",
        peg$c228 = peg$literalExpectation("mg", true),
        peg$c229 = "milliliters",
        peg$c230 = peg$literalExpectation("milliliters", true),
        peg$c231 = "milliliter",
        peg$c232 = peg$literalExpectation("milliliter", true),
        peg$c233 = "ml.",
        peg$c234 = peg$literalExpectation("ml.", true),
        peg$c235 = "ml",
        peg$c236 = peg$literalExpectation("ml", true),
        peg$c237 = "generous pinch",
        peg$c238 = peg$literalExpectation("generous pinch", true),
        peg$c239 = "sprigs of",
        peg$c240 = peg$literalExpectation("sprigs of", true),
        peg$c241 = "splash of",
        peg$c242 = peg$literalExpectation("splash of", true),
        peg$c243 = "slices of",
        peg$c244 = peg$literalExpectation("slices of", true),
        peg$c245 = "pinch of",
        peg$c246 = peg$literalExpectation("pinch of", true),
        peg$c247 = "drops of",
        peg$c248 = peg$literalExpectation("drops of", true),
        peg$c249 = "piece of",
        peg$c250 = peg$literalExpectation("piece of", true),
        peg$c251 = "stick of",
        peg$c252 = peg$literalExpectation("stick of", true),
        peg$c253 = "handfuls",
        peg$c254 = peg$literalExpectation("handfuls", true),
        peg$c255 = "stalk of",
        peg$c256 = peg$literalExpectation("stalk of", true),
        peg$c257 = "sprinkle",
        peg$c258 = peg$literalExpectation("sprinkle", true),
        peg$c259 = "handful",
        peg$c260 = peg$literalExpectation("handful", true),
        peg$c261 = "touches",
        peg$c262 = peg$literalExpectation("touches", true),
        peg$c263 = "pinches",
        peg$c264 = peg$literalExpectation("pinches", true),
        peg$c265 = "bunches",
        peg$c266 = peg$literalExpectation("bunches", true),
        peg$c267 = "splash",
        peg$c268 = peg$literalExpectation("splash", true),
        peg$c269 = "inches",
        peg$c270 = peg$literalExpectation("inches", true),
        peg$c271 = "rounds",
        peg$c272 = peg$literalExpectation("rounds", true),
        peg$c273 = "can of",
        peg$c274 = peg$literalExpectation("can of", true),
        peg$c275 = "dashes",
        peg$c276 = peg$literalExpectation("dashes", true),
        peg$c277 = "pieces",
        peg$c278 = peg$literalExpectation("pieces", true),
        peg$c279 = "medium",
        peg$c280 = peg$literalExpectation("medium", true),
        peg$c281 = "bricks",
        peg$c282 = peg$literalExpectation("bricks", true),
        peg$c283 = "leaves",
        peg$c284 = peg$literalExpectation("leaves", true),
        peg$c285 = "slices",
        peg$c286 = peg$literalExpectation("slices", true),
        peg$c287 = "sprigs",
        peg$c288 = peg$literalExpectation("sprigs", true),
        peg$c289 = "strips",
        peg$c290 = peg$literalExpectation("strips", true),
        peg$c291 = "stalks",
        peg$c292 = peg$literalExpectation("stalks", true),
        peg$c293 = "sticks",
        peg$c294 = peg$literalExpectation("sticks", true),
        peg$c295 = "recipe",
        peg$c296 = peg$literalExpectation("recipe", true),
        peg$c297 = "loaves",
        peg$c298 = peg$literalExpectation("loaves", true),
        peg$c299 = "sheet",
        peg$c300 = peg$literalExpectation("sheet", true),
        peg$c301 = "piece",
        peg$c302 = peg$literalExpectation("piece", true),
        peg$c303 = "extra",
        peg$c304 = peg$literalExpectation("extra", true),
        peg$c305 = "stick",
        peg$c306 = peg$literalExpectation("stick", true),
        peg$c307 = "touch",
        peg$c308 = peg$literalExpectation("touch", true),
        peg$c309 = "pinch",
        peg$c310 = peg$literalExpectation("pinch", true),
        peg$c311 = "bowls",
        peg$c312 = peg$literalExpectation("bowls", true),
        peg$c313 = "small",
        peg$c314 = peg$literalExpectation("small", true),
        peg$c315 = "large",
        peg$c316 = peg$literalExpectation("large", true),
        peg$c317 = "bunch",
        peg$c318 = peg$literalExpectation("bunch", true),
        peg$c319 = "heads",
        peg$c320 = peg$literalExpectation("heads", true),
        peg$c321 = "knobs",
        peg$c322 = peg$literalExpectation("knobs", true),
        peg$c323 = "brick",
        peg$c324 = peg$literalExpectation("brick", true),
        peg$c325 = "cubes",
        peg$c326 = peg$literalExpectation("cubes", true),
        peg$c327 = "drops",
        peg$c328 = peg$literalExpectation("drops", true),
        peg$c329 = "slice",
        peg$c330 = peg$literalExpectation("slice", true),
        peg$c331 = "sprig",
        peg$c332 = peg$literalExpectation("sprig", true),
        peg$c333 = "strip",
        peg$c334 = peg$literalExpectation("strip", true),
        peg$c335 = "stalk",
        peg$c336 = peg$literalExpectation("stalk", true),
        peg$c337 = "turns",
        peg$c338 = peg$literalExpectation("turns", true),
        peg$c339 = "loave",
        peg$c340 = peg$literalExpectation("loave", true),
        peg$c341 = "packs",
        peg$c342 = peg$literalExpectation("packs", true),
        peg$c343 = "loaf",
        peg$c344 = peg$literalExpectation("loaf", true),
        peg$c345 = "glug",
        peg$c346 = peg$literalExpectation("glug", true),
        peg$c347 = "inch",
        peg$c348 = peg$literalExpectation("inch", true),
        peg$c349 = "unit",
        peg$c350 = peg$literalExpectation("unit", true),
        peg$c351 = "dash",
        peg$c352 = peg$literalExpectation("dash", true),
        peg$c353 = "bowl",
        peg$c354 = peg$literalExpectation("bowl", true),
        peg$c355 = "cans",
        peg$c356 = peg$literalExpectation("cans", true),
        peg$c357 = "ears",
        peg$c358 = peg$literalExpectation("ears", true),
        peg$c359 = "head",
        peg$c360 = peg$literalExpectation("head", true),
        peg$c361 = "knob",
        peg$c362 = peg$literalExpectation("knob", true),
        peg$c363 = "cube",
        peg$c364 = peg$literalExpectation("cube", true),
        peg$c365 = "drop",
        peg$c366 = peg$literalExpectation("drop", true),
        peg$c367 = "leaf",
        peg$c368 = peg$literalExpectation("leaf", true),
        peg$c369 = "some",
        peg$c370 = peg$literalExpectation("some", true),
        peg$c371 = "pack",
        peg$c372 = peg$literalExpectation("pack", true),
        peg$c373 = "can",
        peg$c374 = peg$literalExpectation("can", true),
        peg$c375 = "few",
        peg$c376 = peg$literalExpectation("few", true),
        peg$c377 = "big",
        peg$c378 = peg$literalExpectation("big", true),
        peg$c379 = "ear",
        peg$c380 = peg$literalExpectation("ear", true),
        peg$c381 = "in",
        peg$c382 = peg$literalExpectation("in", true),
        peg$c383 = "li",
        peg$c384 = peg$literalExpectation("li", true),
        peg$c385 = "ea",
        peg$c386 = peg$literalExpectation("ea", true),
        peg$c387 = "cm",
        peg$c388 = peg$literalExpectation("cm", true),
        peg$c389 = "(",
        peg$c390 = peg$literalExpectation("(", false),
        peg$c391 = ")",
        peg$c392 = peg$literalExpectation(")", false),
        peg$c393 = function(amount, unit) {
           return {amount: amount, unit: unit };
          },
        peg$c394 = "grated",
        peg$c395 = peg$literalExpectation("grated", true),
        peg$c396 = peg$literalExpectation("inch", false),
        peg$c397 = "es",
        peg$c398 = peg$literalExpectation("es", false),
        peg$c399 = "scant",
        peg$c400 = peg$literalExpectation("scant", true),
        peg$c401 = "serving",
        peg$c402 = peg$literalExpectation("serving", true),
        peg$c403 = "heaping",
        peg$c404 = peg$literalExpectation("heaping", true),
        peg$c405 = "room-temperature",
        peg$c406 = peg$literalExpectation("room-temperature", true),
        peg$c407 = "freshly ground",
        peg$c408 = peg$literalExpectation("freshly ground", true),
        peg$c409 = "medium-bodied",
        peg$c410 = peg$literalExpectation("medium-bodied", true),
        peg$c411 = "low-sodium",
        peg$c412 = peg$literalExpectation("low-sodium", true),
        peg$c413 = "low sodium",
        peg$c414 = peg$literalExpectation("low sodium", true),
        peg$c415 = "vine-ripe",
        peg$c416 = peg$literalExpectation("vine-ripe", true),
        peg$c417 = "thick cut",
        peg$c418 = peg$literalExpectation("thick cut", true),
        peg$c419 = "uncooked",
        peg$c420 = peg$literalExpectation("uncooked", true),
        peg$c421 = "boneless",
        peg$c422 = peg$literalExpectation("boneless", true),
        peg$c423 = "assorted",
        peg$c424 = peg$literalExpectation("assorted", true),
        peg$c425 = "blanched",
        peg$c426 = peg$literalExpectation("blanched", true),
        peg$c427 = "unsalted",
        peg$c428 = peg$literalExpectation("unsalted", true),
        peg$c429 = "shredded",
        peg$c430 = peg$literalExpectation("shredded", true),
        peg$c431 = "lukewarm",
        peg$c432 = peg$literalExpectation("lukewarm", true),
        peg$c433 = "nonstick",
        peg$c434 = peg$literalExpectation("nonstick", true),
        peg$c435 = "leftover",
        peg$c436 = peg$literalExpectation("leftover", true),
        peg$c437 = "homemade",
        peg$c438 = peg$literalExpectation("homemade", true),
        peg$c439 = "coarsely",
        peg$c440 = peg$literalExpectation("coarsely", true),
        peg$c441 = "quality",
        peg$c442 = peg$literalExpectation("quality", true),
        peg$c443 = "organic",
        peg$c444 = peg$literalExpectation("organic", true),
        peg$c445 = "skin-on",
        peg$c446 = peg$literalExpectation("skin-on", true),
        peg$c447 = "roasted",
        peg$c448 = peg$literalExpectation("roasted", true),
        peg$c449 = "day old",
        peg$c450 = peg$literalExpectation("day old", true),
        peg$c451 = "day-old",
        peg$c452 = peg$literalExpectation("day-old", true),
        peg$c453 = "bone in",
        peg$c454 = peg$literalExpectation("bone in", true),
        peg$c455 = "bone-in",
        peg$c456 = peg$literalExpectation("bone-in", true),
        peg$c457 = "toasted",
        peg$c458 = peg$literalExpectation("toasted", true),
        peg$c459 = "steamed",
        peg$c460 = peg$literalExpectation("steamed", true),
        peg$c461 = "roughly",
        peg$c462 = peg$literalExpectation("roughly", true),
        peg$c463 = "regular",
        peg$c464 = peg$literalExpectation("regular", true),
        peg$c465 = "freshly",
        peg$c466 = peg$literalExpectation("freshly", true),
        peg$c467 = "crushed",
        peg$c468 = peg$literalExpectation("crushed", true),
        peg$c469 = "cracked",
        peg$c470 = peg$literalExpectation("cracked", true),
        peg$c471 = "chopped",
        peg$c472 = peg$literalExpectation("chopped", true),
        peg$c473 = "chilled",
        peg$c474 = peg$literalExpectation("chilled", true),
        peg$c475 = "peeled",
        peg$c476 = peg$literalExpectation("peeled", true),
        peg$c477 = "floury",
        peg$c478 = peg$literalExpectation("floury", true),
        peg$c479 = "packed",
        peg$c480 = peg$literalExpectation("packed", true),
        peg$c481 = "tinned",
        peg$c482 = peg$literalExpectation("tinned", true),
        peg$c483 = "thinly",
        peg$c484 = peg$literalExpectation("thinly", true),
        peg$c485 = "sliced",
        peg$c486 = peg$literalExpectation("sliced", true),
        peg$c487 = "shaved",
        peg$c488 = peg$literalExpectation("shaved", true),
        peg$c489 = "smooth",
        peg$c490 = peg$literalExpectation("smooth", true),
        peg$c491 = "pitted",
        peg$c492 = peg$literalExpectation("pitted", true),
        peg$c493 = "minced",
        peg$c494 = peg$literalExpectation("minced", true),
        peg$c495 = "melted",
        peg$c496 = peg$literalExpectation("melted", true),
        peg$c497 = "mashed",
        peg$c498 = peg$literalExpectation("mashed", true),
        peg$c499 = "ground",
        peg$c500 = peg$literalExpectation("ground", true),
        peg$c501 = "frozen",
        peg$c502 = peg$literalExpectation("frozen", true),
        peg$c503 = "finely",
        peg$c504 = peg$literalExpectation("finely", true),
        peg$c505 = "cooked",
        peg$c506 = peg$literalExpectation("cooked", true),
        peg$c507 = "coarse",
        peg$c508 = peg$literalExpectation("coarse", true),
        peg$c509 = "canned",
        peg$c510 = peg$literalExpectation("canned", true),
        peg$c511 = "crispy",
        peg$c512 = peg$literalExpectation("crispy", true),
        peg$c513 = "sized",
        peg$c514 = peg$literalExpectation("sized", true),
        peg$c515 = "whole",
        peg$c516 = peg$literalExpectation("whole", true),
        peg$c517 = "runny",
        peg$c518 = peg$literalExpectation("runny", true),
        peg$c519 = "thick",
        peg$c520 = peg$literalExpectation("thick", true),
        peg$c521 = "fresh",
        peg$c522 = peg$literalExpectation("fresh", true),
        peg$c523 = "fatty",
        peg$c524 = peg$literalExpectation("fatty", true),
        peg$c525 = "dried",
        peg$c526 = peg$literalExpectation("dried", true),
        peg$c527 = "diced",
        peg$c528 = peg$literalExpectation("diced", true),
        peg$c529 = "flat",
        peg$c530 = peg$literalExpectation("flat", true),
        peg$c531 = "ripe",
        peg$c532 = peg$literalExpectation("ripe", true),
        peg$c533 = "pure",
        peg$c534 = peg$literalExpectation("pure", true),
        peg$c535 = "best",
        peg$c536 = peg$literalExpectation("best", true),
        peg$c537 = "very",
        peg$c538 = peg$literalExpectation("very", true),
        peg$c539 = "warm",
        peg$c540 = peg$literalExpectation("warm", true),
        peg$c541 = "torn",
        peg$c542 = peg$literalExpectation("torn", true),
        peg$c543 = "aged",
        peg$c544 = peg$literalExpectation("aged", true),
        peg$c545 = "thin",
        peg$c546 = peg$literalExpectation("thin", true),
        peg$c547 = "soft",
        peg$c548 = peg$literalExpectation("soft", true),
        peg$c549 = "good",
        peg$c550 = peg$literalExpectation("good", true),
        peg$c551 = "fine",
        peg$c552 = peg$literalExpectation("fine", true),
        peg$c553 = "cold",
        peg$c554 = peg$literalExpectation("cold", true),
        peg$c555 = "raw",
        peg$c556 = peg$literalExpectation("raw", true),
        peg$c557 = "hot",
        peg$c558 = peg$literalExpectation("hot", true),
        peg$c559 = "fat",
        peg$c560 = peg$literalExpectation("fat", true),
        peg$c561 = "dry",
        peg$c562 = peg$literalExpectation("dry", true),
        peg$c563 = "/",
        peg$c564 = peg$literalExpectation("/", false),
        peg$c565 = function(first, second) {
            return [first, second];
          },
        peg$c566 = function(phrase) {
              let ingredients = phrase.split(' or ');
              if (ingredients.length === 1) {
                ingredients = phrase.split(' and ');
              }
              return ingredients.map(str => {
                  return str.trim();
              });
            },
        peg$c567 = ",",
        peg$c568 = peg$literalExpectation(",", false),
        peg$c569 = function(indicator, phrase) { return [phrase]; },
        peg$c570 = function(indicator, phrase, phrase2) {
             let phrases = [];
             (phrase) ? phrases.push(phrase) : null;
             (phrase2) ? phrases.push(phrase2) : null;
             return phrases;
          },

        peg$currPos          = 0,
        peg$savedPos         = 0,
        peg$posDetailsCache  = [{ line: 1, column: 1 }],
        peg$maxFailPos       = 0,
        peg$maxFailExpected  = [],
        peg$silentFails      = 0,

        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function text() {
      return input.substring(peg$savedPos, peg$currPos);
    }

    function location() {
      return peg$computeLocation(peg$savedPos, peg$currPos);
    }

    function expected(description, location) {
      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

      throw peg$buildStructuredError(
        [peg$otherExpectation(description)],
        input.substring(peg$savedPos, peg$currPos),
        location
      );
    }

    function error(message, location) {
      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

      throw peg$buildSimpleError(message, location);
    }

    function peg$literalExpectation(text, ignoreCase) {
      return { type: "literal", text: text, ignoreCase: ignoreCase };
    }

    function peg$classExpectation(parts, inverted, ignoreCase) {
      return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase };
    }

    function peg$anyExpectation() {
      return { type: "any" };
    }

    function peg$endExpectation() {
      return { type: "end" };
    }

    function peg$otherExpectation(description) {
      return { type: "other", description: description };
    }

    function peg$computePosDetails(pos) {
      var details = peg$posDetailsCache[pos], p;

      if (details) {
        return details;
      } else {
        p = pos - 1;
        while (!peg$posDetailsCache[p]) {
          p--;
        }

        details = peg$posDetailsCache[p];
        details = {
          line:   details.line,
          column: details.column
        };

        while (p < pos) {
          if (input.charCodeAt(p) === 10) {
            details.line++;
            details.column = 1;
          } else {
            details.column++;
          }

          p++;
        }

        peg$posDetailsCache[pos] = details;
        return details;
      }
    }

    function peg$computeLocation(startPos, endPos) {
      var startPosDetails = peg$computePosDetails(startPos),
          endPosDetails   = peg$computePosDetails(endPos);

      return {
        start: {
          offset: startPos,
          line:   startPosDetails.line,
          column: startPosDetails.column
        },
        end: {
          offset: endPos,
          line:   endPosDetails.line,
          column: endPosDetails.column
        }
      };
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) { return; }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildSimpleError(message, location) {
      return new peg$SyntaxError(message, null, null, location);
    }

    function peg$buildStructuredError(expected, found, location) {
      return new peg$SyntaxError(
        peg$SyntaxError.buildMessage(expected, found),
        expected,
        found,
        location
      );
    }

    function peg$parsestart() {
      var s0;

      s0 = peg$parseingredientLine();

      return s0;
    }

    function peg$parseingredientLine() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;

      s0 = peg$currPos;
      s1 = peg$parseamount();
      if (s1 === peg$FAILED) {
        s1 = null;
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsews();
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsews();
          }
        } else {
          s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
          s2 = null;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parseignore();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$parsemultipleUnitDesc();
            if (s4 !== peg$FAILED) {
              s5 = peg$parseignore();
              if (s5 === peg$FAILED) {
                s5 = null;
              }
              if (s5 !== peg$FAILED) {
                s6 = peg$parseunit();
                if (s6 === peg$FAILED) {
                  s6 = null;
                }
                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsews();
                  if (s8 !== peg$FAILED) {
                    while (s8 !== peg$FAILED) {
                      s7.push(s8);
                      s8 = peg$parsews();
                    }
                  } else {
                    s7 = peg$FAILED;
                  }
                  if (s7 === peg$FAILED) {
                    s7 = null;
                  }
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parseignore();
                    if (s8 === peg$FAILED) {
                      s8 = null;
                    }
                    if (s8 !== peg$FAILED) {
                      s9 = peg$parsecontainer();
                      if (s9 === peg$FAILED) {
                        s9 = null;
                      }
                      if (s9 !== peg$FAILED) {
                        s10 = [];
                        s11 = peg$parsews();
                        if (s11 !== peg$FAILED) {
                          while (s11 !== peg$FAILED) {
                            s10.push(s11);
                            s11 = peg$parsews();
                          }
                        } else {
                          s10 = peg$FAILED;
                        }
                        if (s10 === peg$FAILED) {
                          s10 = null;
                        }
                        if (s10 !== peg$FAILED) {
                          s11 = peg$parseignore();
                          if (s11 === peg$FAILED) {
                            s11 = null;
                          }
                          if (s11 !== peg$FAILED) {
                            s12 = peg$parsemultipleIngredientDesc();
                            if (s12 !== peg$FAILED) {
                              s13 = peg$parseignore();
                              if (s13 === peg$FAILED) {
                                s13 = null;
                              }
                              if (s13 !== peg$FAILED) {
                                s14 = peg$parseingredient();
                                if (s14 !== peg$FAILED) {
                                  s15 = peg$parseignore();
                                  if (s15 === peg$FAILED) {
                                    s15 = null;
                                  }
                                  if (s15 !== peg$FAILED) {
                                    s16 = peg$parsecomment();
                                    if (s16 === peg$FAILED) {
                                      s16 = null;
                                    }
                                    if (s16 !== peg$FAILED) {
                                      if (peg$c0.test(input.charAt(peg$currPos))) {
                                        s17 = input.charAt(peg$currPos);
                                        peg$currPos++;
                                      } else {
                                        s17 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c1); }
                                      }
                                      if (s17 === peg$FAILED) {
                                        s17 = null;
                                      }
                                      if (s17 !== peg$FAILED) {
                                        peg$savedPos = s0;
                                        s1 = peg$c2(s1, s4, s6, s9, s12, s14, s16);
                                        s0 = s1;
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsemultipleIngredientDesc() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parseingredientDesc();
      if (s1 === peg$FAILED) {
        s1 = null;
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsews();
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsews();
          }
        } else {
          s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
          s2 = null;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parseingredientDesc();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsews();
            if (s5 !== peg$FAILED) {
              while (s5 !== peg$FAILED) {
                s4.push(s5);
                s5 = peg$parsews();
              }
            } else {
              s4 = peg$FAILED;
            }
            if (s4 === peg$FAILED) {
              s4 = null;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parseingredientDesc();
              if (s5 === peg$FAILED) {
                s5 = null;
              }
              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsews();
                if (s7 !== peg$FAILED) {
                  while (s7 !== peg$FAILED) {
                    s6.push(s7);
                    s7 = peg$parsews();
                  }
                } else {
                  s6 = peg$FAILED;
                }
                if (s6 === peg$FAILED) {
                  s6 = null;
                }
                if (s6 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c3(s1, s3, s5);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsemultipleUnitDesc() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$parseunitDesc();
      if (s1 === peg$FAILED) {
        s1 = null;
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsews();
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsews();
          }
        } else {
          s2 = peg$FAILED;
        }
        if (s2 === peg$FAILED) {
          s2 = null;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parseunitDesc();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsews();
            if (s5 !== peg$FAILED) {
              while (s5 !== peg$FAILED) {
                s4.push(s5);
                s5 = peg$parsews();
              }
            } else {
              s4 = peg$FAILED;
            }
            if (s4 === peg$FAILED) {
              s4 = null;
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parseunitDesc();
              if (s5 === peg$FAILED) {
                s5 = null;
              }
              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsews();
                if (s7 !== peg$FAILED) {
                  while (s7 !== peg$FAILED) {
                    s6.push(s7);
                    s7 = peg$parsews();
                  }
                } else {
                  s6 = peg$FAILED;
                }
                if (s6 === peg$FAILED) {
                  s6 = null;
                }
                if (s6 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c3(s1, s3, s5);
                  s0 = s1;
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsews() {
      var s0;

      if (input.charCodeAt(peg$currPos) === 32) {
        s0 = peg$c4;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c5); }
      }
      if (s0 === peg$FAILED) {
        if (peg$c6.test(input.charAt(peg$currPos))) {
          s0 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c7); }
        }
      }

      return s0;
    }

    function peg$parsespace() {
      var s0;

      if (input.charCodeAt(peg$currPos) === 32) {
        s0 = peg$c4;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c5); }
      }

      return s0;
    }

    function peg$parsefloat() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      s3 = [];
      s4 = peg$parseinteger();
      if (s4 !== peg$FAILED) {
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parseinteger();
        }
      } else {
        s3 = peg$FAILED;
      }
      if (s3 === peg$FAILED) {
        s3 = null;
      }
      if (s3 !== peg$FAILED) {
        s2 = input.substring(s2, peg$currPos);
      } else {
        s2 = s3;
      }
      if (s2 !== peg$FAILED) {
        if (peg$c8.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c9); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          s5 = [];
          s6 = peg$parseinteger();
          if (s6 !== peg$FAILED) {
            while (s6 !== peg$FAILED) {
              s5.push(s6);
              s6 = peg$parseinteger();
            }
          } else {
            s5 = peg$FAILED;
          }
          if (s5 !== peg$FAILED) {
            s4 = input.substring(s4, peg$currPos);
          } else {
            s4 = s5;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s0 = input.substring(s0, peg$currPos);
      } else {
        s0 = s1;
      }

      return s0;
    }

    function peg$parsemixed_number() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      s3 = [];
      s4 = peg$parseinteger();
      if (s4 !== peg$FAILED) {
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parseinteger();
        }
      } else {
        s3 = peg$FAILED;
      }
      if (s3 !== peg$FAILED) {
        s2 = input.substring(s2, peg$currPos);
      } else {
        s2 = s3;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parsespace();
        if (s3 !== peg$FAILED) {
          s4 = peg$parsefraction();
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s0 = input.substring(s0, peg$currPos);
      } else {
        s0 = s1;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = [];
        s3 = peg$parseinteger();
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parseinteger();
          }
        } else {
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsedashes();
          if (s4 !== peg$FAILED) {
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              s4 = peg$parsedashes();
            }
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parseinteger();
            if (s5 !== peg$FAILED) {
              while (s5 !== peg$FAILED) {
                s4.push(s5);
                s5 = peg$parseinteger();
              }
            } else {
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s2 = [s2, s3, s4];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
        if (s1 !== peg$FAILED) {
          s0 = input.substring(s0, peg$currPos);
        } else {
          s0 = s1;
        }
      }

      return s0;
    }

    function peg$parsefraction() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      s3 = [];
      s4 = peg$parseinteger();
      if (s4 !== peg$FAILED) {
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parseinteger();
        }
      } else {
        s3 = peg$FAILED;
      }
      if (s3 !== peg$FAILED) {
        s2 = input.substring(s2, peg$currPos);
      } else {
        s2 = s3;
      }
      if (s2 !== peg$FAILED) {
        if (peg$c10.test(input.charAt(peg$currPos))) {
          s3 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c11); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          s5 = [];
          s6 = peg$parseinteger();
          if (s6 !== peg$FAILED) {
            while (s6 !== peg$FAILED) {
              s5.push(s6);
              s6 = peg$parseinteger();
            }
          } else {
            s5 = peg$FAILED;
          }
          if (s5 !== peg$FAILED) {
            s4 = input.substring(s4, peg$currPos);
          } else {
            s4 = s5;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s0 = input.substring(s0, peg$currPos);
      } else {
        s0 = s1;
      }

      return s0;
    }

    function peg$parseinteger() {
      var s0;

      if (peg$c12.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c13); }
      }

      return s0;
    }

    function peg$parseunicode() {
      var s0, s1;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 189) {
        s1 = peg$c14;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c15); }
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c16();
      }
      s0 = s1;
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 8531) {
          s1 = peg$c17;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c18); }
        }
        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c19();
        }
        s0 = s1;
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 8532) {
            s1 = peg$c20;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c21); }
          }
          if (s1 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c22();
          }
          s0 = s1;
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 188) {
              s1 = peg$c23;
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c24); }
            }
            if (s1 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c25();
            }
            s0 = s1;
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              if (input.charCodeAt(peg$currPos) === 190) {
                s1 = peg$c26;
                peg$currPos++;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c27); }
              }
              if (s1 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c28();
              }
              s0 = s1;
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.charCodeAt(peg$currPos) === 8533) {
                  s1 = peg$c29;
                  peg$currPos++;
                } else {
                  s1 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c30); }
                }
                if (s1 !== peg$FAILED) {
                  peg$savedPos = s0;
                  s1 = peg$c31();
                }
                s0 = s1;
                if (s0 === peg$FAILED) {
                  s0 = peg$currPos;
                  if (input.charCodeAt(peg$currPos) === 8534) {
                    s1 = peg$c32;
                    peg$currPos++;
                  } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c33); }
                  }
                  if (s1 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c34();
                  }
                  s0 = s1;
                  if (s0 === peg$FAILED) {
                    s0 = peg$currPos;
                    if (input.charCodeAt(peg$currPos) === 8535) {
                      s1 = peg$c35;
                      peg$currPos++;
                    } else {
                      s1 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c36); }
                    }
                    if (s1 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c37();
                    }
                    s0 = s1;
                    if (s0 === peg$FAILED) {
                      s0 = peg$currPos;
                      if (input.charCodeAt(peg$currPos) === 8536) {
                        s1 = peg$c38;
                        peg$currPos++;
                      } else {
                        s1 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c39); }
                      }
                      if (s1 !== peg$FAILED) {
                        peg$savedPos = s0;
                        s1 = peg$c40();
                      }
                      s0 = s1;
                      if (s0 === peg$FAILED) {
                        s0 = peg$currPos;
                        if (input.charCodeAt(peg$currPos) === 8537) {
                          s1 = peg$c41;
                          peg$currPos++;
                        } else {
                          s1 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c42); }
                        }
                        if (s1 !== peg$FAILED) {
                          peg$savedPos = s0;
                          s1 = peg$c43();
                        }
                        s0 = s1;
                        if (s0 === peg$FAILED) {
                          s0 = peg$currPos;
                          if (input.charCodeAt(peg$currPos) === 8538) {
                            s1 = peg$c44;
                            peg$currPos++;
                          } else {
                            s1 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c45); }
                          }
                          if (s1 !== peg$FAILED) {
                            peg$savedPos = s0;
                            s1 = peg$c46();
                          }
                          s0 = s1;
                          if (s0 === peg$FAILED) {
                            s0 = peg$currPos;
                            if (input.charCodeAt(peg$currPos) === 8528) {
                              s1 = peg$c47;
                              peg$currPos++;
                            } else {
                              s1 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c48); }
                            }
                            if (s1 !== peg$FAILED) {
                              peg$savedPos = s0;
                              s1 = peg$c49();
                            }
                            s0 = s1;
                            if (s0 === peg$FAILED) {
                              s0 = peg$currPos;
                              if (input.charCodeAt(peg$currPos) === 8539) {
                                s1 = peg$c50;
                                peg$currPos++;
                              } else {
                                s1 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c51); }
                              }
                              if (s1 !== peg$FAILED) {
                                peg$savedPos = s0;
                                s1 = peg$c52();
                              }
                              s0 = s1;
                              if (s0 === peg$FAILED) {
                                s0 = peg$currPos;
                                if (input.charCodeAt(peg$currPos) === 8540) {
                                  s1 = peg$c53;
                                  peg$currPos++;
                                } else {
                                  s1 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c54); }
                                }
                                if (s1 !== peg$FAILED) {
                                  peg$savedPos = s0;
                                  s1 = peg$c55();
                                }
                                s0 = s1;
                                if (s0 === peg$FAILED) {
                                  s0 = peg$currPos;
                                  if (input.charCodeAt(peg$currPos) === 8541) {
                                    s1 = peg$c56;
                                    peg$currPos++;
                                  } else {
                                    s1 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c57); }
                                  }
                                  if (s1 !== peg$FAILED) {
                                    peg$savedPos = s0;
                                    s1 = peg$c58();
                                  }
                                  s0 = s1;
                                  if (s0 === peg$FAILED) {
                                    s0 = peg$currPos;
                                    if (input.charCodeAt(peg$currPos) === 8542) {
                                      s1 = peg$c59;
                                      peg$currPos++;
                                    } else {
                                      s1 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c60); }
                                    }
                                    if (s1 !== peg$FAILED) {
                                      peg$savedPos = s0;
                                      s1 = peg$c61();
                                    }
                                    s0 = s1;
                                    if (s0 === peg$FAILED) {
                                      s0 = peg$currPos;
                                      if (input.charCodeAt(peg$currPos) === 8529) {
                                        s1 = peg$c62;
                                        peg$currPos++;
                                      } else {
                                        s1 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c63); }
                                      }
                                      if (s1 !== peg$FAILED) {
                                        peg$savedPos = s0;
                                        s1 = peg$c64();
                                      }
                                      s0 = s1;
                                      if (s0 === peg$FAILED) {
                                        s0 = peg$currPos;
                                        if (input.charCodeAt(peg$currPos) === 8530) {
                                          s1 = peg$c65;
                                          peg$currPos++;
                                        } else {
                                          s1 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c66); }
                                        }
                                        if (s1 !== peg$FAILED) {
                                          peg$savedPos = s0;
                                          s1 = peg$c67();
                                        }
                                        s0 = s1;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsealphanumeric() {
      var s0;

      if (peg$c68.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c69); }
      }

      return s0;
    }

    function peg$parseletter() {
      var s0;

      if (peg$c70.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c71); }
      }

      return s0;
    }

    function peg$parsedashes() {
      var s0;

      if (peg$c72.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c73); }
      }

      return s0;
    }

    function peg$parsepunctuation() {
      var s0;

      if (peg$c74.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c75); }
      }
      if (s0 === peg$FAILED) {
        if (peg$c8.test(input.charAt(peg$currPos))) {
          s0 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c9); }
        }
        if (s0 === peg$FAILED) {
          if (peg$c76.test(input.charAt(peg$currPos))) {
            s0 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c77); }
          }
          if (s0 === peg$FAILED) {
            if (peg$c78.test(input.charAt(peg$currPos))) {
              s0 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c79); }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseignore() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = [];
      s3 = peg$parsews();
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$parsews();
      }
      if (s2 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 97) {
          s3 = peg$c80;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c81); }
        }
        if (s3 !== peg$FAILED) {
          s4 = [];
          s5 = peg$parsews();
          if (s5 !== peg$FAILED) {
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsews();
            }
          } else {
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s0 = input.substring(s0, peg$currPos);
      } else {
        s0 = s1;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = [];
        s3 = peg$parsews();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsews();
        }
        if (s2 !== peg$FAILED) {
          if (input.substr(peg$currPos, 2) === peg$c82) {
            s3 = peg$c82;
            peg$currPos += 2;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c83); }
          }
          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsews();
            if (s5 !== peg$FAILED) {
              while (s5 !== peg$FAILED) {
                s4.push(s5);
                s5 = peg$parsews();
              }
            } else {
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s2 = [s2, s3, s4];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
        if (s1 !== peg$FAILED) {
          s0 = input.substring(s0, peg$currPos);
        } else {
          s0 = s1;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$currPos;
          s2 = [];
          s3 = peg$parsews();
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsews();
          }
          if (s2 !== peg$FAILED) {
            if (input.substr(peg$currPos, 2) === peg$c84) {
              s3 = peg$c84;
              peg$currPos += 2;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c85); }
            }
            if (s3 !== peg$FAILED) {
              s4 = [];
              s5 = peg$parsews();
              if (s5 !== peg$FAILED) {
                while (s5 !== peg$FAILED) {
                  s4.push(s5);
                  s5 = peg$parsews();
                }
              } else {
                s4 = peg$FAILED;
              }
              if (s4 !== peg$FAILED) {
                s2 = [s2, s3, s4];
                s1 = s2;
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
          if (s1 !== peg$FAILED) {
            s0 = input.substring(s0, peg$currPos);
          } else {
            s0 = s1;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            s1 = peg$currPos;
            s2 = [];
            s3 = peg$parsews();
            while (s3 !== peg$FAILED) {
              s2.push(s3);
              s3 = peg$parsews();
            }
            if (s2 !== peg$FAILED) {
              if (input.substr(peg$currPos, 3) === peg$c86) {
                s3 = peg$c86;
                peg$currPos += 3;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c87); }
              }
              if (s3 !== peg$FAILED) {
                s4 = [];
                s5 = peg$parsews();
                if (s5 !== peg$FAILED) {
                  while (s5 !== peg$FAILED) {
                    s4.push(s5);
                    s5 = peg$parsews();
                  }
                } else {
                  s4 = peg$FAILED;
                }
                if (s4 !== peg$FAILED) {
                  s2 = [s2, s3, s4];
                  s1 = s2;
                } else {
                  peg$currPos = s1;
                  s1 = peg$FAILED;
                }
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
            if (s1 !== peg$FAILED) {
              s0 = input.substring(s0, peg$currPos);
            } else {
              s0 = s1;
            }
          }
        }
      }

      return s0;
    }

    function peg$parsephrase() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseword();
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$currPos;
        s5 = peg$parsespace();
        if (s5 !== peg$FAILED) {
          s6 = peg$parseword();
          if (s6 !== peg$FAILED) {
            s5 = [s5, s6];
            s4 = s5;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
        } else {
          peg$currPos = s4;
          s4 = peg$FAILED;
        }
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$currPos;
          s5 = peg$parsespace();
          if (s5 !== peg$FAILED) {
            s6 = peg$parseword();
            if (s6 !== peg$FAILED) {
              s5 = [s5, s6];
              s4 = s5;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
        }
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s0 = input.substring(s0, peg$currPos);
      } else {
        s0 = s1;
      }

      return s0;
    }

    function peg$parseword() {
      var s0, s1, s2, s3, s4, s5;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = [];
      s3 = peg$parseletter();
      if (s3 !== peg$FAILED) {
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parseletter();
        }
      } else {
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parsedashes();
        if (s4 !== peg$FAILED) {
          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsedashes();
          }
        } else {
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s4 = [];
          s5 = peg$parseletter();
          if (s5 !== peg$FAILED) {
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parseletter();
            }
          } else {
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s0 = input.substring(s0, peg$currPos);
      } else {
        s0 = s1;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = [];
        s3 = peg$parseinteger();
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parseinteger();
          }
        } else {
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsedashes();
          if (s4 !== peg$FAILED) {
            while (s4 !== peg$FAILED) {
              s3.push(s4);
              s4 = peg$parsedashes();
            }
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parseletter();
            if (s5 !== peg$FAILED) {
              while (s5 !== peg$FAILED) {
                s4.push(s5);
                s5 = peg$parseletter();
              }
            } else {
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s2 = [s2, s3, s4];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
        if (s1 !== peg$FAILED) {
          s0 = input.substring(s0, peg$currPos);
        } else {
          s0 = s1;
        }
        if (s0 === peg$FAILED) {
          s0 = [];
          s1 = peg$parseletter();
          if (s1 !== peg$FAILED) {
            while (s1 !== peg$FAILED) {
              s0.push(s1);
              s1 = peg$parseletter();
            }
          } else {
            s0 = peg$FAILED;
          }
        }
      }

      return s0;
    }

    function peg$parseamount() {
      var s0, s1, s2, s3, s4;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = [];
      s3 = peg$parseinteger();
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$parseinteger();
      }
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parsews();
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parsews();
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseunicode();
          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s0 = input.substring(s0, peg$currPos);
      } else {
        s0 = s1;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$parsefloat();
        if (s0 === peg$FAILED) {
          s0 = peg$parsemixed_number();
          if (s0 === peg$FAILED) {
            s0 = peg$parsefraction();
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              s1 = [];
              s2 = peg$parseinteger();
              if (s2 !== peg$FAILED) {
                while (s2 !== peg$FAILED) {
                  s1.push(s2);
                  s2 = peg$parseinteger();
                }
              } else {
                s1 = peg$FAILED;
              }
              if (s1 !== peg$FAILED) {
                s0 = input.substring(s0, peg$currPos);
              } else {
                s0 = s1;
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseunit() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseenglish_unit();
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsews();
        if (s3 !== peg$FAILED) {
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsews();
          }
        } else {
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c88(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsemetric_unit();
        if (s2 !== peg$FAILED) {
          s1 = input.substring(s1, peg$currPos);
        } else {
          s1 = s2;
        }
        if (s1 !== peg$FAILED) {
          s2 = [];
          s3 = peg$parsews();
          if (s3 !== peg$FAILED) {
            while (s3 !== peg$FAILED) {
              s2.push(s3);
              s3 = peg$parsews();
            }
          } else {
            s2 = peg$FAILED;
          }
          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c88(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$currPos;
          s2 = peg$parseimprecise_unit();
          if (s2 !== peg$FAILED) {
            s1 = input.substring(s1, peg$currPos);
          } else {
            s1 = s2;
          }
          if (s1 !== peg$FAILED) {
            s2 = [];
            s3 = peg$parsews();
            if (s3 !== peg$FAILED) {
              while (s3 !== peg$FAILED) {
                s2.push(s3);
                s3 = peg$parsews();
              }
            } else {
              s2 = peg$FAILED;
            }
            if (s2 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c88(s1, s2);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
      }

      return s0;
    }

    function peg$parsecontainerizedUnit() {
      var s0, s1, s2, s3;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parseenglish_unit();
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsews();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsews();
        }
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c88(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsemetric_unit();
        if (s2 !== peg$FAILED) {
          s1 = input.substring(s1, peg$currPos);
        } else {
          s1 = s2;
        }
        if (s1 !== peg$FAILED) {
          s2 = [];
          s3 = peg$parsews();
          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsews();
          }
          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c88(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$currPos;
          s2 = peg$parseimprecise_unit();
          if (s2 !== peg$FAILED) {
            s1 = input.substring(s1, peg$currPos);
          } else {
            s1 = s2;
          }
          if (s1 !== peg$FAILED) {
            s2 = [];
            s3 = peg$parsews();
            while (s3 !== peg$FAILED) {
              s2.push(s3);
              s3 = peg$parsews();
            }
            if (s2 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c88(s1, s2);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
      }

      return s0;
    }

    function peg$parseenglish_unit() {
      var s0;

      s0 = peg$parsecup();
      if (s0 === peg$FAILED) {
        s0 = peg$parsefluid_ounce();
        if (s0 === peg$FAILED) {
          s0 = peg$parsegallon();
          if (s0 === peg$FAILED) {
            s0 = peg$parseounce();
            if (s0 === peg$FAILED) {
              s0 = peg$parsepint();
              if (s0 === peg$FAILED) {
                s0 = peg$parsepound();
                if (s0 === peg$FAILED) {
                  s0 = peg$parsequart();
                  if (s0 === peg$FAILED) {
                    s0 = peg$parsetablespoon();
                    if (s0 === peg$FAILED) {
                      s0 = peg$parseteaspoon();
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsecup() {
      var s0;

      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c89) {
        s0 = input.substr(peg$currPos, 4);
        peg$currPos += 4;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c90); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 3).toLowerCase() === peg$c91) {
          s0 = input.substr(peg$currPos, 3);
          peg$currPos += 3;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c92); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 2).toLowerCase() === peg$c93) {
            s0 = input.substr(peg$currPos, 2);
            peg$currPos += 2;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c94); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 1).toLowerCase() === peg$c95) {
              s0 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c96); }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsefluid_ounce() {
      var s0;

      if (input.substr(peg$currPos, 12).toLowerCase() === peg$c97) {
        s0 = input.substr(peg$currPos, 12);
        peg$currPos += 12;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c98); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 11).toLowerCase() === peg$c99) {
          s0 = input.substr(peg$currPos, 11);
          peg$currPos += 11;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c100); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 7).toLowerCase() === peg$c101) {
            s0 = input.substr(peg$currPos, 7);
            peg$currPos += 7;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c102); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 5).toLowerCase() === peg$c103) {
              s0 = input.substr(peg$currPos, 5);
              peg$currPos += 5;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c104); }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsegallon() {
      var s0;

      if (input.substr(peg$currPos, 7).toLowerCase() === peg$c105) {
        s0 = input.substr(peg$currPos, 7);
        peg$currPos += 7;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c106); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 6).toLowerCase() === peg$c107) {
          s0 = input.substr(peg$currPos, 6);
          peg$currPos += 6;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c108); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 4).toLowerCase() === peg$c109) {
            s0 = input.substr(peg$currPos, 4);
            peg$currPos += 4;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c110); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 3).toLowerCase() === peg$c111) {
              s0 = input.substr(peg$currPos, 3);
              peg$currPos += 3;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c112); }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseounce() {
      var s0;

      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c113) {
        s0 = input.substr(peg$currPos, 6);
        peg$currPos += 6;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c114); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 5).toLowerCase() === peg$c115) {
          s0 = input.substr(peg$currPos, 5);
          peg$currPos += 5;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c116); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 3).toLowerCase() === peg$c117) {
            s0 = input.substr(peg$currPos, 3);
            peg$currPos += 3;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c118); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 2).toLowerCase() === peg$c119) {
              s0 = input.substr(peg$currPos, 2);
              peg$currPos += 2;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c120); }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsepint() {
      var s0;

      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c121) {
        s0 = input.substr(peg$currPos, 5);
        peg$currPos += 5;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c122); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 4).toLowerCase() === peg$c123) {
          s0 = input.substr(peg$currPos, 4);
          peg$currPos += 4;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c124); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 3).toLowerCase() === peg$c125) {
            s0 = input.substr(peg$currPos, 3);
            peg$currPos += 3;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c126); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 2).toLowerCase() === peg$c127) {
              s0 = input.substr(peg$currPos, 2);
              peg$currPos += 2;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c128); }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsepound() {
      var s0;

      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c129) {
        s0 = input.substr(peg$currPos, 6);
        peg$currPos += 6;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c130); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 5).toLowerCase() === peg$c131) {
          s0 = input.substr(peg$currPos, 5);
          peg$currPos += 5;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c132); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 4).toLowerCase() === peg$c133) {
            s0 = input.substr(peg$currPos, 4);
            peg$currPos += 4;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c134); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 3).toLowerCase() === peg$c135) {
              s0 = input.substr(peg$currPos, 3);
              peg$currPos += 3;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c136); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 3).toLowerCase() === peg$c137) {
                s0 = input.substr(peg$currPos, 3);
                peg$currPos += 3;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c138); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 2).toLowerCase() === peg$c139) {
                  s0 = input.substr(peg$currPos, 2);
                  peg$currPos += 2;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c140); }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsequart() {
      var s0;

      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c141) {
        s0 = input.substr(peg$currPos, 6);
        peg$currPos += 6;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c142); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 5).toLowerCase() === peg$c143) {
          s0 = input.substr(peg$currPos, 5);
          peg$currPos += 5;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c144); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 4).toLowerCase() === peg$c145) {
            s0 = input.substr(peg$currPos, 4);
            peg$currPos += 4;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c146); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 3).toLowerCase() === peg$c147) {
              s0 = input.substr(peg$currPos, 3);
              peg$currPos += 3;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c148); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 3).toLowerCase() === peg$c149) {
                s0 = input.substr(peg$currPos, 3);
                peg$currPos += 3;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c150); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 2).toLowerCase() === peg$c151) {
                  s0 = input.substr(peg$currPos, 2);
                  peg$currPos += 2;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c152); }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsetablespoon() {
      var s0;

      if (input.substr(peg$currPos, 11).toLowerCase() === peg$c153) {
        s0 = input.substr(peg$currPos, 11);
        peg$currPos += 11;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c154); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 10).toLowerCase() === peg$c155) {
          s0 = input.substr(peg$currPos, 10);
          peg$currPos += 10;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c156); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 5).toLowerCase() === peg$c157) {
            s0 = input.substr(peg$currPos, 5);
            peg$currPos += 5;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c158); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 5).toLowerCase() === peg$c159) {
              s0 = input.substr(peg$currPos, 5);
              peg$currPos += 5;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c160); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 4).toLowerCase() === peg$c161) {
                s0 = input.substr(peg$currPos, 4);
                peg$currPos += 4;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c162); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 4).toLowerCase() === peg$c163) {
                  s0 = input.substr(peg$currPos, 4);
                  peg$currPos += 4;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c164); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 3).toLowerCase() === peg$c165) {
                    s0 = input.substr(peg$currPos, 3);
                    peg$currPos += 3;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c166); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 3).toLowerCase() === peg$c167) {
                      s0 = input.substr(peg$currPos, 3);
                      peg$currPos += 3;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c168); }
                    }
                    if (s0 === peg$FAILED) {
                      if (input.substr(peg$currPos, 2) === peg$c169) {
                        s0 = peg$c169;
                        peg$currPos += 2;
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c170); }
                      }
                      if (s0 === peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 84) {
                          s0 = peg$c171;
                          peg$currPos++;
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c172); }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseteaspoon() {
      var s0;

      if (input.substr(peg$currPos, 9).toLowerCase() === peg$c173) {
        s0 = input.substr(peg$currPos, 9);
        peg$currPos += 9;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c174); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 8).toLowerCase() === peg$c175) {
          s0 = input.substr(peg$currPos, 8);
          peg$currPos += 8;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c176); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 4).toLowerCase() === peg$c177) {
            s0 = input.substr(peg$currPos, 4);
            peg$currPos += 4;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c178); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 3).toLowerCase() === peg$c179) {
              s0 = input.substr(peg$currPos, 3);
              peg$currPos += 3;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c180); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 2) === peg$c181) {
                s0 = peg$c181;
                peg$currPos += 2;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c182); }
              }
              if (s0 === peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 116) {
                  s0 = peg$c183;
                  peg$currPos++;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c184); }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsemetric_unit() {
      var s0;

      s0 = peg$parsegram();
      if (s0 === peg$FAILED) {
        s0 = peg$parsekilogram();
        if (s0 === peg$FAILED) {
          s0 = peg$parseliter();
          if (s0 === peg$FAILED) {
            s0 = peg$parsemilligram();
            if (s0 === peg$FAILED) {
              s0 = peg$parsemilliliter();
            }
          }
        }
      }

      return s0;
    }

    function peg$parsegram() {
      var s0;

      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c185) {
        s0 = input.substr(peg$currPos, 5);
        peg$currPos += 5;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c186); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 4).toLowerCase() === peg$c187) {
          s0 = input.substr(peg$currPos, 4);
          peg$currPos += 4;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c188); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 3).toLowerCase() === peg$c189) {
            s0 = input.substr(peg$currPos, 3);
            peg$currPos += 3;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c190); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 3).toLowerCase() === peg$c191) {
              s0 = input.substr(peg$currPos, 3);
              peg$currPos += 3;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c192); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 2).toLowerCase() === peg$c193) {
                s0 = input.substr(peg$currPos, 2);
                peg$currPos += 2;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c194); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 2).toLowerCase() === peg$c195) {
                  s0 = input.substr(peg$currPos, 2);
                  peg$currPos += 2;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c196); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 2).toLowerCase() === peg$c197) {
                    s0 = input.substr(peg$currPos, 2);
                    peg$currPos += 2;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c198); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 1).toLowerCase() === peg$c199) {
                      s0 = input.charAt(peg$currPos);
                      peg$currPos++;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c200); }
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsekilogram() {
      var s0;

      if (input.substr(peg$currPos, 9).toLowerCase() === peg$c201) {
        s0 = input.substr(peg$currPos, 9);
        peg$currPos += 9;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c202); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 8).toLowerCase() === peg$c203) {
          s0 = input.substr(peg$currPos, 8);
          peg$currPos += 8;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c204); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 3).toLowerCase() === peg$c205) {
            s0 = input.substr(peg$currPos, 3);
            peg$currPos += 3;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c206); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 3).toLowerCase() === peg$c207) {
              s0 = input.substr(peg$currPos, 3);
              peg$currPos += 3;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c208); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 2).toLowerCase() === peg$c209) {
                s0 = input.substr(peg$currPos, 2);
                peg$currPos += 2;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c210); }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseliter() {
      var s0;

      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c211) {
        s0 = input.substr(peg$currPos, 6);
        peg$currPos += 6;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c212); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 6).toLowerCase() === peg$c213) {
          s0 = input.substr(peg$currPos, 6);
          peg$currPos += 6;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c214); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 5).toLowerCase() === peg$c215) {
            s0 = input.substr(peg$currPos, 5);
            peg$currPos += 5;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c216); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 2).toLowerCase() === peg$c217) {
              s0 = input.substr(peg$currPos, 2);
              peg$currPos += 2;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c218); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 1).toLowerCase() === peg$c219) {
                s0 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c220); }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsemilligram() {
      var s0;

      if (input.substr(peg$currPos, 10).toLowerCase() === peg$c221) {
        s0 = input.substr(peg$currPos, 10);
        peg$currPos += 10;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c222); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 9).toLowerCase() === peg$c223) {
          s0 = input.substr(peg$currPos, 9);
          peg$currPos += 9;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c224); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 3).toLowerCase() === peg$c225) {
            s0 = input.substr(peg$currPos, 3);
            peg$currPos += 3;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c226); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 2).toLowerCase() === peg$c227) {
              s0 = input.substr(peg$currPos, 2);
              peg$currPos += 2;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c228); }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsemilliliter() {
      var s0;

      if (input.substr(peg$currPos, 11).toLowerCase() === peg$c229) {
        s0 = input.substr(peg$currPos, 11);
        peg$currPos += 11;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c230); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 10).toLowerCase() === peg$c231) {
          s0 = input.substr(peg$currPos, 10);
          peg$currPos += 10;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c232); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 3).toLowerCase() === peg$c233) {
            s0 = input.substr(peg$currPos, 3);
            peg$currPos += 3;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c234); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 2).toLowerCase() === peg$c235) {
              s0 = input.substr(peg$currPos, 2);
              peg$currPos += 2;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c236); }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseimprecise_unit() {
      var s0;

      if (input.substr(peg$currPos, 14).toLowerCase() === peg$c237) {
        s0 = input.substr(peg$currPos, 14);
        peg$currPos += 14;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c238); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 9).toLowerCase() === peg$c239) {
          s0 = input.substr(peg$currPos, 9);
          peg$currPos += 9;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c240); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 9).toLowerCase() === peg$c241) {
            s0 = input.substr(peg$currPos, 9);
            peg$currPos += 9;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c242); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 9).toLowerCase() === peg$c243) {
              s0 = input.substr(peg$currPos, 9);
              peg$currPos += 9;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c244); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 8).toLowerCase() === peg$c245) {
                s0 = input.substr(peg$currPos, 8);
                peg$currPos += 8;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c246); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 8).toLowerCase() === peg$c247) {
                  s0 = input.substr(peg$currPos, 8);
                  peg$currPos += 8;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c248); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 8).toLowerCase() === peg$c249) {
                    s0 = input.substr(peg$currPos, 8);
                    peg$currPos += 8;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c250); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 8).toLowerCase() === peg$c251) {
                      s0 = input.substr(peg$currPos, 8);
                      peg$currPos += 8;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c252); }
                    }
                    if (s0 === peg$FAILED) {
                      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c253) {
                        s0 = input.substr(peg$currPos, 8);
                        peg$currPos += 8;
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c254); }
                      }
                      if (s0 === peg$FAILED) {
                        if (input.substr(peg$currPos, 8).toLowerCase() === peg$c255) {
                          s0 = input.substr(peg$currPos, 8);
                          peg$currPos += 8;
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c256); }
                        }
                        if (s0 === peg$FAILED) {
                          if (input.substr(peg$currPos, 8).toLowerCase() === peg$c257) {
                            s0 = input.substr(peg$currPos, 8);
                            peg$currPos += 8;
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c258); }
                          }
                          if (s0 === peg$FAILED) {
                            if (input.substr(peg$currPos, 7).toLowerCase() === peg$c259) {
                              s0 = input.substr(peg$currPos, 7);
                              peg$currPos += 7;
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c260); }
                            }
                            if (s0 === peg$FAILED) {
                              if (input.substr(peg$currPos, 7).toLowerCase() === peg$c261) {
                                s0 = input.substr(peg$currPos, 7);
                                peg$currPos += 7;
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c262); }
                              }
                              if (s0 === peg$FAILED) {
                                if (input.substr(peg$currPos, 7).toLowerCase() === peg$c263) {
                                  s0 = input.substr(peg$currPos, 7);
                                  peg$currPos += 7;
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c264); }
                                }
                                if (s0 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 7).toLowerCase() === peg$c259) {
                                    s0 = input.substr(peg$currPos, 7);
                                    peg$currPos += 7;
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c260); }
                                  }
                                  if (s0 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 7).toLowerCase() === peg$c265) {
                                      s0 = input.substr(peg$currPos, 7);
                                      peg$currPos += 7;
                                    } else {
                                      s0 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c266); }
                                    }
                                    if (s0 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c267) {
                                        s0 = input.substr(peg$currPos, 6);
                                        peg$currPos += 6;
                                      } else {
                                        s0 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c268); }
                                      }
                                      if (s0 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 6).toLowerCase() === peg$c269) {
                                          s0 = input.substr(peg$currPos, 6);
                                          peg$currPos += 6;
                                        } else {
                                          s0 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c270); }
                                        }
                                        if (s0 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 6).toLowerCase() === peg$c271) {
                                            s0 = input.substr(peg$currPos, 6);
                                            peg$currPos += 6;
                                          } else {
                                            s0 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c272); }
                                          }
                                          if (s0 === peg$FAILED) {
                                            if (input.substr(peg$currPos, 6).toLowerCase() === peg$c273) {
                                              s0 = input.substr(peg$currPos, 6);
                                              peg$currPos += 6;
                                            } else {
                                              s0 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c274); }
                                            }
                                            if (s0 === peg$FAILED) {
                                              if (input.substr(peg$currPos, 6).toLowerCase() === peg$c275) {
                                                s0 = input.substr(peg$currPos, 6);
                                                peg$currPos += 6;
                                              } else {
                                                s0 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c276); }
                                              }
                                              if (s0 === peg$FAILED) {
                                                if (input.substr(peg$currPos, 6).toLowerCase() === peg$c277) {
                                                  s0 = input.substr(peg$currPos, 6);
                                                  peg$currPos += 6;
                                                } else {
                                                  s0 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c278); }
                                                }
                                                if (s0 === peg$FAILED) {
                                                  if (input.substr(peg$currPos, 6).toLowerCase() === peg$c279) {
                                                    s0 = input.substr(peg$currPos, 6);
                                                    peg$currPos += 6;
                                                  } else {
                                                    s0 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c280); }
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c281) {
                                                      s0 = input.substr(peg$currPos, 6);
                                                      peg$currPos += 6;
                                                    } else {
                                                      s0 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c282); }
                                                    }
                                                    if (s0 === peg$FAILED) {
                                                      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c283) {
                                                        s0 = input.substr(peg$currPos, 6);
                                                        peg$currPos += 6;
                                                      } else {
                                                        s0 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c284); }
                                                      }
                                                      if (s0 === peg$FAILED) {
                                                        if (input.substr(peg$currPos, 6).toLowerCase() === peg$c285) {
                                                          s0 = input.substr(peg$currPos, 6);
                                                          peg$currPos += 6;
                                                        } else {
                                                          s0 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c286); }
                                                        }
                                                        if (s0 === peg$FAILED) {
                                                          if (input.substr(peg$currPos, 6).toLowerCase() === peg$c287) {
                                                            s0 = input.substr(peg$currPos, 6);
                                                            peg$currPos += 6;
                                                          } else {
                                                            s0 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c288); }
                                                          }
                                                          if (s0 === peg$FAILED) {
                                                            if (input.substr(peg$currPos, 6).toLowerCase() === peg$c289) {
                                                              s0 = input.substr(peg$currPos, 6);
                                                              peg$currPos += 6;
                                                            } else {
                                                              s0 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c290); }
                                                            }
                                                            if (s0 === peg$FAILED) {
                                                              if (input.substr(peg$currPos, 6).toLowerCase() === peg$c291) {
                                                                s0 = input.substr(peg$currPos, 6);
                                                                peg$currPos += 6;
                                                              } else {
                                                                s0 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c292); }
                                                              }
                                                              if (s0 === peg$FAILED) {
                                                                if (input.substr(peg$currPos, 6).toLowerCase() === peg$c293) {
                                                                  s0 = input.substr(peg$currPos, 6);
                                                                  peg$currPos += 6;
                                                                } else {
                                                                  s0 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c294); }
                                                                }
                                                                if (s0 === peg$FAILED) {
                                                                  if (input.substr(peg$currPos, 6).toLowerCase() === peg$c295) {
                                                                    s0 = input.substr(peg$currPos, 6);
                                                                    peg$currPos += 6;
                                                                  } else {
                                                                    s0 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c296); }
                                                                  }
                                                                  if (s0 === peg$FAILED) {
                                                                    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c297) {
                                                                      s0 = input.substr(peg$currPos, 6);
                                                                      peg$currPos += 6;
                                                                    } else {
                                                                      s0 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c298); }
                                                                    }
                                                                    if (s0 === peg$FAILED) {
                                                                      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c299) {
                                                                        s0 = input.substr(peg$currPos, 5);
                                                                        peg$currPos += 5;
                                                                      } else {
                                                                        s0 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c300); }
                                                                      }
                                                                      if (s0 === peg$FAILED) {
                                                                        if (input.substr(peg$currPos, 5).toLowerCase() === peg$c301) {
                                                                          s0 = input.substr(peg$currPos, 5);
                                                                          peg$currPos += 5;
                                                                        } else {
                                                                          s0 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c302); }
                                                                        }
                                                                        if (s0 === peg$FAILED) {
                                                                          if (input.substr(peg$currPos, 5).toLowerCase() === peg$c303) {
                                                                            s0 = input.substr(peg$currPos, 5);
                                                                            peg$currPos += 5;
                                                                          } else {
                                                                            s0 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c304); }
                                                                          }
                                                                          if (s0 === peg$FAILED) {
                                                                            if (input.substr(peg$currPos, 5).toLowerCase() === peg$c305) {
                                                                              s0 = input.substr(peg$currPos, 5);
                                                                              peg$currPos += 5;
                                                                            } else {
                                                                              s0 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c306); }
                                                                            }
                                                                            if (s0 === peg$FAILED) {
                                                                              if (input.substr(peg$currPos, 5).toLowerCase() === peg$c307) {
                                                                                s0 = input.substr(peg$currPos, 5);
                                                                                peg$currPos += 5;
                                                                              } else {
                                                                                s0 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c308); }
                                                                              }
                                                                              if (s0 === peg$FAILED) {
                                                                                if (input.substr(peg$currPos, 5).toLowerCase() === peg$c309) {
                                                                                  s0 = input.substr(peg$currPos, 5);
                                                                                  peg$currPos += 5;
                                                                                } else {
                                                                                  s0 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c310); }
                                                                                }
                                                                                if (s0 === peg$FAILED) {
                                                                                  if (input.substr(peg$currPos, 5).toLowerCase() === peg$c301) {
                                                                                    s0 = input.substr(peg$currPos, 5);
                                                                                    peg$currPos += 5;
                                                                                  } else {
                                                                                    s0 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c302); }
                                                                                  }
                                                                                  if (s0 === peg$FAILED) {
                                                                                    if (input.substr(peg$currPos, 5).toLowerCase() === peg$c311) {
                                                                                      s0 = input.substr(peg$currPos, 5);
                                                                                      peg$currPos += 5;
                                                                                    } else {
                                                                                      s0 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c312); }
                                                                                    }
                                                                                    if (s0 === peg$FAILED) {
                                                                                      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c313) {
                                                                                        s0 = input.substr(peg$currPos, 5);
                                                                                        peg$currPos += 5;
                                                                                      } else {
                                                                                        s0 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c314); }
                                                                                      }
                                                                                      if (s0 === peg$FAILED) {
                                                                                        if (input.substr(peg$currPos, 5).toLowerCase() === peg$c315) {
                                                                                          s0 = input.substr(peg$currPos, 5);
                                                                                          peg$currPos += 5;
                                                                                        } else {
                                                                                          s0 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c316); }
                                                                                        }
                                                                                        if (s0 === peg$FAILED) {
                                                                                          if (input.substr(peg$currPos, 5).toLowerCase() === peg$c317) {
                                                                                            s0 = input.substr(peg$currPos, 5);
                                                                                            peg$currPos += 5;
                                                                                          } else {
                                                                                            s0 = peg$FAILED;
                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c318); }
                                                                                          }
                                                                                          if (s0 === peg$FAILED) {
                                                                                            if (input.substr(peg$currPos, 5).toLowerCase() === peg$c319) {
                                                                                              s0 = input.substr(peg$currPos, 5);
                                                                                              peg$currPos += 5;
                                                                                            } else {
                                                                                              s0 = peg$FAILED;
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c320); }
                                                                                            }
                                                                                            if (s0 === peg$FAILED) {
                                                                                              if (input.substr(peg$currPos, 5).toLowerCase() === peg$c321) {
                                                                                                s0 = input.substr(peg$currPos, 5);
                                                                                                peg$currPos += 5;
                                                                                              } else {
                                                                                                s0 = peg$FAILED;
                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c322); }
                                                                                              }
                                                                                              if (s0 === peg$FAILED) {
                                                                                                if (input.substr(peg$currPos, 5).toLowerCase() === peg$c323) {
                                                                                                  s0 = input.substr(peg$currPos, 5);
                                                                                                  peg$currPos += 5;
                                                                                                } else {
                                                                                                  s0 = peg$FAILED;
                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c324); }
                                                                                                }
                                                                                                if (s0 === peg$FAILED) {
                                                                                                  if (input.substr(peg$currPos, 5).toLowerCase() === peg$c317) {
                                                                                                    s0 = input.substr(peg$currPos, 5);
                                                                                                    peg$currPos += 5;
                                                                                                  } else {
                                                                                                    s0 = peg$FAILED;
                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c318); }
                                                                                                  }
                                                                                                  if (s0 === peg$FAILED) {
                                                                                                    if (input.substr(peg$currPos, 5).toLowerCase() === peg$c325) {
                                                                                                      s0 = input.substr(peg$currPos, 5);
                                                                                                      peg$currPos += 5;
                                                                                                    } else {
                                                                                                      s0 = peg$FAILED;
                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c326); }
                                                                                                    }
                                                                                                    if (s0 === peg$FAILED) {
                                                                                                      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c327) {
                                                                                                        s0 = input.substr(peg$currPos, 5);
                                                                                                        peg$currPos += 5;
                                                                                                      } else {
                                                                                                        s0 = peg$FAILED;
                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c328); }
                                                                                                      }
                                                                                                      if (s0 === peg$FAILED) {
                                                                                                        if (input.substr(peg$currPos, 5).toLowerCase() === peg$c329) {
                                                                                                          s0 = input.substr(peg$currPos, 5);
                                                                                                          peg$currPos += 5;
                                                                                                        } else {
                                                                                                          s0 = peg$FAILED;
                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c330); }
                                                                                                        }
                                                                                                        if (s0 === peg$FAILED) {
                                                                                                          if (input.substr(peg$currPos, 5).toLowerCase() === peg$c331) {
                                                                                                            s0 = input.substr(peg$currPos, 5);
                                                                                                            peg$currPos += 5;
                                                                                                          } else {
                                                                                                            s0 = peg$FAILED;
                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c332); }
                                                                                                          }
                                                                                                          if (s0 === peg$FAILED) {
                                                                                                            if (input.substr(peg$currPos, 5).toLowerCase() === peg$c333) {
                                                                                                              s0 = input.substr(peg$currPos, 5);
                                                                                                              peg$currPos += 5;
                                                                                                            } else {
                                                                                                              s0 = peg$FAILED;
                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c334); }
                                                                                                            }
                                                                                                            if (s0 === peg$FAILED) {
                                                                                                              if (input.substr(peg$currPos, 5).toLowerCase() === peg$c335) {
                                                                                                                s0 = input.substr(peg$currPos, 5);
                                                                                                                peg$currPos += 5;
                                                                                                              } else {
                                                                                                                s0 = peg$FAILED;
                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c336); }
                                                                                                              }
                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                if (input.substr(peg$currPos, 5).toLowerCase() === peg$c337) {
                                                                                                                  s0 = input.substr(peg$currPos, 5);
                                                                                                                  peg$currPos += 5;
                                                                                                                } else {
                                                                                                                  s0 = peg$FAILED;
                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c338); }
                                                                                                                }
                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                  if (input.substr(peg$currPos, 5).toLowerCase() === peg$c339) {
                                                                                                                    s0 = input.substr(peg$currPos, 5);
                                                                                                                    peg$currPos += 5;
                                                                                                                  } else {
                                                                                                                    s0 = peg$FAILED;
                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c340); }
                                                                                                                  }
                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                    if (input.substr(peg$currPos, 5).toLowerCase() === peg$c341) {
                                                                                                                      s0 = input.substr(peg$currPos, 5);
                                                                                                                      peg$currPos += 5;
                                                                                                                    } else {
                                                                                                                      s0 = peg$FAILED;
                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c342); }
                                                                                                                    }
                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c343) {
                                                                                                                        s0 = input.substr(peg$currPos, 4);
                                                                                                                        peg$currPos += 4;
                                                                                                                      } else {
                                                                                                                        s0 = peg$FAILED;
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c344); }
                                                                                                                      }
                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                        if (input.substr(peg$currPos, 4).toLowerCase() === peg$c345) {
                                                                                                                          s0 = input.substr(peg$currPos, 4);
                                                                                                                          peg$currPos += 4;
                                                                                                                        } else {
                                                                                                                          s0 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c346); }
                                                                                                                        }
                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                          if (input.substr(peg$currPos, 4).toLowerCase() === peg$c347) {
                                                                                                                            s0 = input.substr(peg$currPos, 4);
                                                                                                                            peg$currPos += 4;
                                                                                                                          } else {
                                                                                                                            s0 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c348); }
                                                                                                                          }
                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                            if (input.substr(peg$currPos, 4).toLowerCase() === peg$c349) {
                                                                                                                              s0 = input.substr(peg$currPos, 4);
                                                                                                                              peg$currPos += 4;
                                                                                                                            } else {
                                                                                                                              s0 = peg$FAILED;
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c350); }
                                                                                                                            }
                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                              if (input.substr(peg$currPos, 4).toLowerCase() === peg$c351) {
                                                                                                                                s0 = input.substr(peg$currPos, 4);
                                                                                                                                peg$currPos += 4;
                                                                                                                              } else {
                                                                                                                                s0 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c352); }
                                                                                                                              }
                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                if (input.substr(peg$currPos, 4).toLowerCase() === peg$c353) {
                                                                                                                                  s0 = input.substr(peg$currPos, 4);
                                                                                                                                  peg$currPos += 4;
                                                                                                                                } else {
                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c354); }
                                                                                                                                }
                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                  if (input.substr(peg$currPos, 4).toLowerCase() === peg$c355) {
                                                                                                                                    s0 = input.substr(peg$currPos, 4);
                                                                                                                                    peg$currPos += 4;
                                                                                                                                  } else {
                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c356); }
                                                                                                                                  }
                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                    if (input.substr(peg$currPos, 4).toLowerCase() === peg$c357) {
                                                                                                                                      s0 = input.substr(peg$currPos, 4);
                                                                                                                                      peg$currPos += 4;
                                                                                                                                    } else {
                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c358); }
                                                                                                                                    }
                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c359) {
                                                                                                                                        s0 = input.substr(peg$currPos, 4);
                                                                                                                                        peg$currPos += 4;
                                                                                                                                      } else {
                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c360); }
                                                                                                                                      }
                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                        if (input.substr(peg$currPos, 4).toLowerCase() === peg$c361) {
                                                                                                                                          s0 = input.substr(peg$currPos, 4);
                                                                                                                                          peg$currPos += 4;
                                                                                                                                        } else {
                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c362); }
                                                                                                                                        }
                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                          if (input.substr(peg$currPos, 4).toLowerCase() === peg$c363) {
                                                                                                                                            s0 = input.substr(peg$currPos, 4);
                                                                                                                                            peg$currPos += 4;
                                                                                                                                          } else {
                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c364); }
                                                                                                                                          }
                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                            if (input.substr(peg$currPos, 4).toLowerCase() === peg$c365) {
                                                                                                                                              s0 = input.substr(peg$currPos, 4);
                                                                                                                                              peg$currPos += 4;
                                                                                                                                            } else {
                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c366); }
                                                                                                                                            }
                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                              if (input.substr(peg$currPos, 4).toLowerCase() === peg$c367) {
                                                                                                                                                s0 = input.substr(peg$currPos, 4);
                                                                                                                                                peg$currPos += 4;
                                                                                                                                              } else {
                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c368); }
                                                                                                                                              }
                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                if (input.substr(peg$currPos, 4).toLowerCase() === peg$c369) {
                                                                                                                                                  s0 = input.substr(peg$currPos, 4);
                                                                                                                                                  peg$currPos += 4;
                                                                                                                                                } else {
                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c370); }
                                                                                                                                                }
                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                  if (input.substr(peg$currPos, 4).toLowerCase() === peg$c371) {
                                                                                                                                                    s0 = input.substr(peg$currPos, 4);
                                                                                                                                                    peg$currPos += 4;
                                                                                                                                                  } else {
                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c372); }
                                                                                                                                                  }
                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                    if (input.substr(peg$currPos, 3).toLowerCase() === peg$c373) {
                                                                                                                                                      s0 = input.substr(peg$currPos, 3);
                                                                                                                                                      peg$currPos += 3;
                                                                                                                                                    } else {
                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c374); }
                                                                                                                                                    }
                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c375) {
                                                                                                                                                        s0 = input.substr(peg$currPos, 3);
                                                                                                                                                        peg$currPos += 3;
                                                                                                                                                      } else {
                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c376); }
                                                                                                                                                      }
                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                        if (input.substr(peg$currPos, 3).toLowerCase() === peg$c373) {
                                                                                                                                                          s0 = input.substr(peg$currPos, 3);
                                                                                                                                                          peg$currPos += 3;
                                                                                                                                                        } else {
                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c374); }
                                                                                                                                                        }
                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                          if (input.substr(peg$currPos, 3).toLowerCase() === peg$c377) {
                                                                                                                                                            s0 = input.substr(peg$currPos, 3);
                                                                                                                                                            peg$currPos += 3;
                                                                                                                                                          } else {
                                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c378); }
                                                                                                                                                          }
                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                            if (input.substr(peg$currPos, 3).toLowerCase() === peg$c379) {
                                                                                                                                                              s0 = input.substr(peg$currPos, 3);
                                                                                                                                                              peg$currPos += 3;
                                                                                                                                                            } else {
                                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c380); }
                                                                                                                                                            }
                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                              if (input.substr(peg$currPos, 2).toLowerCase() === peg$c381) {
                                                                                                                                                                s0 = input.substr(peg$currPos, 2);
                                                                                                                                                                peg$currPos += 2;
                                                                                                                                                              } else {
                                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c382); }
                                                                                                                                                              }
                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                if (input.substr(peg$currPos, 2).toLowerCase() === peg$c383) {
                                                                                                                                                                  s0 = input.substr(peg$currPos, 2);
                                                                                                                                                                  peg$currPos += 2;
                                                                                                                                                                } else {
                                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c384); }
                                                                                                                                                                }
                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                  if (input.substr(peg$currPos, 2).toLowerCase() === peg$c385) {
                                                                                                                                                                    s0 = input.substr(peg$currPos, 2);
                                                                                                                                                                    peg$currPos += 2;
                                                                                                                                                                  } else {
                                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c386); }
                                                                                                                                                                  }
                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                    if (input.substr(peg$currPos, 2).toLowerCase() === peg$c387) {
                                                                                                                                                                      s0 = input.substr(peg$currPos, 2);
                                                                                                                                                                      peg$currPos += 2;
                                                                                                                                                                    } else {
                                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c388); }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsecontainer() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 40) {
        s1 = peg$c389;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c390); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = [];
        s4 = peg$parseamount();
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parseamount();
        }
        if (s3 !== peg$FAILED) {
          s2 = input.substring(s2, peg$currPos);
        } else {
          s2 = s3;
        }
        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsews();
          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsews();
          }
          if (s3 !== peg$FAILED) {
            s4 = peg$currPos;
            s5 = [];
            s6 = peg$parsecontainerizedUnit();
            while (s6 !== peg$FAILED) {
              s5.push(s6);
              s6 = peg$parsecontainerizedUnit();
            }
            if (s5 !== peg$FAILED) {
              s4 = input.substring(s4, peg$currPos);
            } else {
              s4 = s5;
            }
            if (s4 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 41) {
                s5 = peg$c391;
                peg$currPos++;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c392); }
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c393(s2, s4);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommonDesc() {
      var s0;

      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c394) {
        s0 = input.substr(peg$currPos, 6);
        peg$currPos += 6;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c395); }
      }

      return s0;
    }

    function peg$parseunitDesc() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = [];
      s3 = peg$parseinteger();
      if (s3 !== peg$FAILED) {
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parseinteger();
        }
      } else {
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parsedashes();
        if (s4 !== peg$FAILED) {
          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsedashes();
          }
        } else {
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s4 = [];
          if (input.substr(peg$currPos, 4) === peg$c347) {
            s5 = peg$c347;
            peg$currPos += 4;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c396); }
          }
          if (s5 !== peg$FAILED) {
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              if (input.substr(peg$currPos, 4) === peg$c347) {
                s5 = peg$c347;
                peg$currPos += 4;
              } else {
                s5 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c396); }
              }
            }
          } else {
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s5 = [];
            if (input.substr(peg$currPos, 2) === peg$c397) {
              s6 = peg$c397;
              peg$currPos += 2;
            } else {
              s6 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c398); }
            }
            while (s6 !== peg$FAILED) {
              s5.push(s6);
              if (input.substr(peg$currPos, 2) === peg$c397) {
                s6 = peg$c397;
                peg$currPos += 2;
              } else {
                s6 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c398); }
              }
            }
            if (s5 !== peg$FAILED) {
              s2 = [s2, s3, s4, s5];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s0 = input.substring(s0, peg$currPos);
      } else {
        s0 = s1;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$parsecommonDesc();
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 5).toLowerCase() === peg$c399) {
            s0 = input.substr(peg$currPos, 5);
            peg$currPos += 5;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c400); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 5).toLowerCase() === peg$c313) {
              s0 = input.substr(peg$currPos, 5);
              peg$currPos += 5;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c314); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 6).toLowerCase() === peg$c279) {
                s0 = input.substr(peg$currPos, 6);
                peg$currPos += 6;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c280); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 5).toLowerCase() === peg$c315) {
                  s0 = input.substr(peg$currPos, 5);
                  peg$currPos += 5;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c316); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 3).toLowerCase() === peg$c377) {
                    s0 = input.substr(peg$currPos, 3);
                    peg$currPos += 3;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c378); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 7).toLowerCase() === peg$c401) {
                      s0 = input.substr(peg$currPos, 7);
                      peg$currPos += 7;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c402); }
                    }
                    if (s0 === peg$FAILED) {
                      if (input.substr(peg$currPos, 7).toLowerCase() === peg$c403) {
                        s0 = input.substr(peg$currPos, 7);
                        peg$currPos += 7;
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c404); }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseingredientDesc() {
      var s0;

      s0 = peg$parsecommonDesc();
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 16).toLowerCase() === peg$c405) {
          s0 = input.substr(peg$currPos, 16);
          peg$currPos += 16;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c406); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 14).toLowerCase() === peg$c407) {
            s0 = input.substr(peg$currPos, 14);
            peg$currPos += 14;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c408); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 13).toLowerCase() === peg$c409) {
              s0 = input.substr(peg$currPos, 13);
              peg$currPos += 13;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c410); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 10).toLowerCase() === peg$c411) {
                s0 = input.substr(peg$currPos, 10);
                peg$currPos += 10;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c412); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 10).toLowerCase() === peg$c413) {
                  s0 = input.substr(peg$currPos, 10);
                  peg$currPos += 10;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c414); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 9).toLowerCase() === peg$c415) {
                    s0 = input.substr(peg$currPos, 9);
                    peg$currPos += 9;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c416); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 9).toLowerCase() === peg$c417) {
                      s0 = input.substr(peg$currPos, 9);
                      peg$currPos += 9;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c418); }
                    }
                    if (s0 === peg$FAILED) {
                      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c419) {
                        s0 = input.substr(peg$currPos, 8);
                        peg$currPos += 8;
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c420); }
                      }
                      if (s0 === peg$FAILED) {
                        if (input.substr(peg$currPos, 8).toLowerCase() === peg$c421) {
                          s0 = input.substr(peg$currPos, 8);
                          peg$currPos += 8;
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c422); }
                        }
                        if (s0 === peg$FAILED) {
                          if (input.substr(peg$currPos, 8).toLowerCase() === peg$c423) {
                            s0 = input.substr(peg$currPos, 8);
                            peg$currPos += 8;
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c424); }
                          }
                          if (s0 === peg$FAILED) {
                            if (input.substr(peg$currPos, 8).toLowerCase() === peg$c425) {
                              s0 = input.substr(peg$currPos, 8);
                              peg$currPos += 8;
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c426); }
                            }
                            if (s0 === peg$FAILED) {
                              if (input.substr(peg$currPos, 8).toLowerCase() === peg$c427) {
                                s0 = input.substr(peg$currPos, 8);
                                peg$currPos += 8;
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c428); }
                              }
                              if (s0 === peg$FAILED) {
                                if (input.substr(peg$currPos, 8).toLowerCase() === peg$c429) {
                                  s0 = input.substr(peg$currPos, 8);
                                  peg$currPos += 8;
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c430); }
                                }
                                if (s0 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 8).toLowerCase() === peg$c431) {
                                    s0 = input.substr(peg$currPos, 8);
                                    peg$currPos += 8;
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c432); }
                                  }
                                  if (s0 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 8).toLowerCase() === peg$c433) {
                                      s0 = input.substr(peg$currPos, 8);
                                      peg$currPos += 8;
                                    } else {
                                      s0 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c434); }
                                    }
                                    if (s0 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 8).toLowerCase() === peg$c435) {
                                        s0 = input.substr(peg$currPos, 8);
                                        peg$currPos += 8;
                                      } else {
                                        s0 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c436); }
                                      }
                                      if (s0 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 8).toLowerCase() === peg$c437) {
                                          s0 = input.substr(peg$currPos, 8);
                                          peg$currPos += 8;
                                        } else {
                                          s0 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c438); }
                                        }
                                        if (s0 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 8).toLowerCase() === peg$c439) {
                                            s0 = input.substr(peg$currPos, 8);
                                            peg$currPos += 8;
                                          } else {
                                            s0 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c440); }
                                          }
                                          if (s0 === peg$FAILED) {
                                            if (input.substr(peg$currPos, 7).toLowerCase() === peg$c441) {
                                              s0 = input.substr(peg$currPos, 7);
                                              peg$currPos += 7;
                                            } else {
                                              s0 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c442); }
                                            }
                                            if (s0 === peg$FAILED) {
                                              if (input.substr(peg$currPos, 7).toLowerCase() === peg$c443) {
                                                s0 = input.substr(peg$currPos, 7);
                                                peg$currPos += 7;
                                              } else {
                                                s0 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c444); }
                                              }
                                              if (s0 === peg$FAILED) {
                                                if (input.substr(peg$currPos, 7).toLowerCase() === peg$c445) {
                                                  s0 = input.substr(peg$currPos, 7);
                                                  peg$currPos += 7;
                                                } else {
                                                  s0 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c446); }
                                                }
                                                if (s0 === peg$FAILED) {
                                                  if (input.substr(peg$currPos, 7).toLowerCase() === peg$c447) {
                                                    s0 = input.substr(peg$currPos, 7);
                                                    peg$currPos += 7;
                                                  } else {
                                                    s0 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c448); }
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    if (input.substr(peg$currPos, 7).toLowerCase() === peg$c449) {
                                                      s0 = input.substr(peg$currPos, 7);
                                                      peg$currPos += 7;
                                                    } else {
                                                      s0 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c450); }
                                                    }
                                                    if (s0 === peg$FAILED) {
                                                      if (input.substr(peg$currPos, 7).toLowerCase() === peg$c451) {
                                                        s0 = input.substr(peg$currPos, 7);
                                                        peg$currPos += 7;
                                                      } else {
                                                        s0 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c452); }
                                                      }
                                                      if (s0 === peg$FAILED) {
                                                        if (input.substr(peg$currPos, 7).toLowerCase() === peg$c453) {
                                                          s0 = input.substr(peg$currPos, 7);
                                                          peg$currPos += 7;
                                                        } else {
                                                          s0 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c454); }
                                                        }
                                                        if (s0 === peg$FAILED) {
                                                          if (input.substr(peg$currPos, 7).toLowerCase() === peg$c455) {
                                                            s0 = input.substr(peg$currPos, 7);
                                                            peg$currPos += 7;
                                                          } else {
                                                            s0 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c456); }
                                                          }
                                                          if (s0 === peg$FAILED) {
                                                            if (input.substr(peg$currPos, 7).toLowerCase() === peg$c457) {
                                                              s0 = input.substr(peg$currPos, 7);
                                                              peg$currPos += 7;
                                                            } else {
                                                              s0 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c458); }
                                                            }
                                                            if (s0 === peg$FAILED) {
                                                              if (input.substr(peg$currPos, 7).toLowerCase() === peg$c459) {
                                                                s0 = input.substr(peg$currPos, 7);
                                                                peg$currPos += 7;
                                                              } else {
                                                                s0 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c460); }
                                                              }
                                                              if (s0 === peg$FAILED) {
                                                                if (input.substr(peg$currPos, 7).toLowerCase() === peg$c461) {
                                                                  s0 = input.substr(peg$currPos, 7);
                                                                  peg$currPos += 7;
                                                                } else {
                                                                  s0 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c462); }
                                                                }
                                                                if (s0 === peg$FAILED) {
                                                                  if (input.substr(peg$currPos, 7).toLowerCase() === peg$c463) {
                                                                    s0 = input.substr(peg$currPos, 7);
                                                                    peg$currPos += 7;
                                                                  } else {
                                                                    s0 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c464); }
                                                                  }
                                                                  if (s0 === peg$FAILED) {
                                                                    if (input.substr(peg$currPos, 7).toLowerCase() === peg$c465) {
                                                                      s0 = input.substr(peg$currPos, 7);
                                                                      peg$currPos += 7;
                                                                    } else {
                                                                      s0 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c466); }
                                                                    }
                                                                    if (s0 === peg$FAILED) {
                                                                      if (input.substr(peg$currPos, 7).toLowerCase() === peg$c467) {
                                                                        s0 = input.substr(peg$currPos, 7);
                                                                        peg$currPos += 7;
                                                                      } else {
                                                                        s0 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c468); }
                                                                      }
                                                                      if (s0 === peg$FAILED) {
                                                                        if (input.substr(peg$currPos, 7).toLowerCase() === peg$c469) {
                                                                          s0 = input.substr(peg$currPos, 7);
                                                                          peg$currPos += 7;
                                                                        } else {
                                                                          s0 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c470); }
                                                                        }
                                                                        if (s0 === peg$FAILED) {
                                                                          if (input.substr(peg$currPos, 7).toLowerCase() === peg$c471) {
                                                                            s0 = input.substr(peg$currPos, 7);
                                                                            peg$currPos += 7;
                                                                          } else {
                                                                            s0 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c472); }
                                                                          }
                                                                          if (s0 === peg$FAILED) {
                                                                            if (input.substr(peg$currPos, 7).toLowerCase() === peg$c473) {
                                                                              s0 = input.substr(peg$currPos, 7);
                                                                              peg$currPos += 7;
                                                                            } else {
                                                                              s0 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c474); }
                                                                            }
                                                                            if (s0 === peg$FAILED) {
                                                                              if (input.substr(peg$currPos, 6).toLowerCase() === peg$c475) {
                                                                                s0 = input.substr(peg$currPos, 6);
                                                                                peg$currPos += 6;
                                                                              } else {
                                                                                s0 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c476); }
                                                                              }
                                                                              if (s0 === peg$FAILED) {
                                                                                if (input.substr(peg$currPos, 6).toLowerCase() === peg$c477) {
                                                                                  s0 = input.substr(peg$currPos, 6);
                                                                                  peg$currPos += 6;
                                                                                } else {
                                                                                  s0 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c478); }
                                                                                }
                                                                                if (s0 === peg$FAILED) {
                                                                                  if (input.substr(peg$currPos, 6).toLowerCase() === peg$c479) {
                                                                                    s0 = input.substr(peg$currPos, 6);
                                                                                    peg$currPos += 6;
                                                                                  } else {
                                                                                    s0 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c480); }
                                                                                  }
                                                                                  if (s0 === peg$FAILED) {
                                                                                    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c481) {
                                                                                      s0 = input.substr(peg$currPos, 6);
                                                                                      peg$currPos += 6;
                                                                                    } else {
                                                                                      s0 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c482); }
                                                                                    }
                                                                                    if (s0 === peg$FAILED) {
                                                                                      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c483) {
                                                                                        s0 = input.substr(peg$currPos, 6);
                                                                                        peg$currPos += 6;
                                                                                      } else {
                                                                                        s0 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c484); }
                                                                                      }
                                                                                      if (s0 === peg$FAILED) {
                                                                                        if (input.substr(peg$currPos, 6).toLowerCase() === peg$c485) {
                                                                                          s0 = input.substr(peg$currPos, 6);
                                                                                          peg$currPos += 6;
                                                                                        } else {
                                                                                          s0 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c486); }
                                                                                        }
                                                                                        if (s0 === peg$FAILED) {
                                                                                          if (input.substr(peg$currPos, 6).toLowerCase() === peg$c487) {
                                                                                            s0 = input.substr(peg$currPos, 6);
                                                                                            peg$currPos += 6;
                                                                                          } else {
                                                                                            s0 = peg$FAILED;
                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c488); }
                                                                                          }
                                                                                          if (s0 === peg$FAILED) {
                                                                                            if (input.substr(peg$currPos, 6).toLowerCase() === peg$c489) {
                                                                                              s0 = input.substr(peg$currPos, 6);
                                                                                              peg$currPos += 6;
                                                                                            } else {
                                                                                              s0 = peg$FAILED;
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c490); }
                                                                                            }
                                                                                            if (s0 === peg$FAILED) {
                                                                                              if (input.substr(peg$currPos, 6).toLowerCase() === peg$c491) {
                                                                                                s0 = input.substr(peg$currPos, 6);
                                                                                                peg$currPos += 6;
                                                                                              } else {
                                                                                                s0 = peg$FAILED;
                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c492); }
                                                                                              }
                                                                                              if (s0 === peg$FAILED) {
                                                                                                if (input.substr(peg$currPos, 6).toLowerCase() === peg$c493) {
                                                                                                  s0 = input.substr(peg$currPos, 6);
                                                                                                  peg$currPos += 6;
                                                                                                } else {
                                                                                                  s0 = peg$FAILED;
                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c494); }
                                                                                                }
                                                                                                if (s0 === peg$FAILED) {
                                                                                                  if (input.substr(peg$currPos, 6).toLowerCase() === peg$c495) {
                                                                                                    s0 = input.substr(peg$currPos, 6);
                                                                                                    peg$currPos += 6;
                                                                                                  } else {
                                                                                                    s0 = peg$FAILED;
                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c496); }
                                                                                                  }
                                                                                                  if (s0 === peg$FAILED) {
                                                                                                    if (input.substr(peg$currPos, 6).toLowerCase() === peg$c497) {
                                                                                                      s0 = input.substr(peg$currPos, 6);
                                                                                                      peg$currPos += 6;
                                                                                                    } else {
                                                                                                      s0 = peg$FAILED;
                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c498); }
                                                                                                    }
                                                                                                    if (s0 === peg$FAILED) {
                                                                                                      if (input.substr(peg$currPos, 6).toLowerCase() === peg$c499) {
                                                                                                        s0 = input.substr(peg$currPos, 6);
                                                                                                        peg$currPos += 6;
                                                                                                      } else {
                                                                                                        s0 = peg$FAILED;
                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c500); }
                                                                                                      }
                                                                                                      if (s0 === peg$FAILED) {
                                                                                                        if (input.substr(peg$currPos, 6).toLowerCase() === peg$c501) {
                                                                                                          s0 = input.substr(peg$currPos, 6);
                                                                                                          peg$currPos += 6;
                                                                                                        } else {
                                                                                                          s0 = peg$FAILED;
                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c502); }
                                                                                                        }
                                                                                                        if (s0 === peg$FAILED) {
                                                                                                          if (input.substr(peg$currPos, 6).toLowerCase() === peg$c503) {
                                                                                                            s0 = input.substr(peg$currPos, 6);
                                                                                                            peg$currPos += 6;
                                                                                                          } else {
                                                                                                            s0 = peg$FAILED;
                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c504); }
                                                                                                          }
                                                                                                          if (s0 === peg$FAILED) {
                                                                                                            if (input.substr(peg$currPos, 6).toLowerCase() === peg$c505) {
                                                                                                              s0 = input.substr(peg$currPos, 6);
                                                                                                              peg$currPos += 6;
                                                                                                            } else {
                                                                                                              s0 = peg$FAILED;
                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c506); }
                                                                                                            }
                                                                                                            if (s0 === peg$FAILED) {
                                                                                                              if (input.substr(peg$currPos, 6).toLowerCase() === peg$c507) {
                                                                                                                s0 = input.substr(peg$currPos, 6);
                                                                                                                peg$currPos += 6;
                                                                                                              } else {
                                                                                                                s0 = peg$FAILED;
                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c508); }
                                                                                                              }
                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                if (input.substr(peg$currPos, 6).toLowerCase() === peg$c509) {
                                                                                                                  s0 = input.substr(peg$currPos, 6);
                                                                                                                  peg$currPos += 6;
                                                                                                                } else {
                                                                                                                  s0 = peg$FAILED;
                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c510); }
                                                                                                                }
                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                  if (input.substr(peg$currPos, 6).toLowerCase() === peg$c511) {
                                                                                                                    s0 = input.substr(peg$currPos, 6);
                                                                                                                    peg$currPos += 6;
                                                                                                                  } else {
                                                                                                                    s0 = peg$FAILED;
                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c512); }
                                                                                                                  }
                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                    if (input.substr(peg$currPos, 5).toLowerCase() === peg$c513) {
                                                                                                                      s0 = input.substr(peg$currPos, 5);
                                                                                                                      peg$currPos += 5;
                                                                                                                    } else {
                                                                                                                      s0 = peg$FAILED;
                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c514); }
                                                                                                                    }
                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                      if (input.substr(peg$currPos, 5).toLowerCase() === peg$c515) {
                                                                                                                        s0 = input.substr(peg$currPos, 5);
                                                                                                                        peg$currPos += 5;
                                                                                                                      } else {
                                                                                                                        s0 = peg$FAILED;
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c516); }
                                                                                                                      }
                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                        if (input.substr(peg$currPos, 5).toLowerCase() === peg$c517) {
                                                                                                                          s0 = input.substr(peg$currPos, 5);
                                                                                                                          peg$currPos += 5;
                                                                                                                        } else {
                                                                                                                          s0 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c518); }
                                                                                                                        }
                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                          if (input.substr(peg$currPos, 5).toLowerCase() === peg$c519) {
                                                                                                                            s0 = input.substr(peg$currPos, 5);
                                                                                                                            peg$currPos += 5;
                                                                                                                          } else {
                                                                                                                            s0 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c520); }
                                                                                                                          }
                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                            if (input.substr(peg$currPos, 5).toLowerCase() === peg$c521) {
                                                                                                                              s0 = input.substr(peg$currPos, 5);
                                                                                                                              peg$currPos += 5;
                                                                                                                            } else {
                                                                                                                              s0 = peg$FAILED;
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c522); }
                                                                                                                            }
                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                              if (input.substr(peg$currPos, 5).toLowerCase() === peg$c523) {
                                                                                                                                s0 = input.substr(peg$currPos, 5);
                                                                                                                                peg$currPos += 5;
                                                                                                                              } else {
                                                                                                                                s0 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c524); }
                                                                                                                              }
                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                if (input.substr(peg$currPos, 5).toLowerCase() === peg$c525) {
                                                                                                                                  s0 = input.substr(peg$currPos, 5);
                                                                                                                                  peg$currPos += 5;
                                                                                                                                } else {
                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c526); }
                                                                                                                                }
                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                  if (input.substr(peg$currPos, 5).toLowerCase() === peg$c527) {
                                                                                                                                    s0 = input.substr(peg$currPos, 5);
                                                                                                                                    peg$currPos += 5;
                                                                                                                                  } else {
                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c528); }
                                                                                                                                  }
                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                    if (input.substr(peg$currPos, 4).toLowerCase() === peg$c529) {
                                                                                                                                      s0 = input.substr(peg$currPos, 4);
                                                                                                                                      peg$currPos += 4;
                                                                                                                                    } else {
                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c530); }
                                                                                                                                    }
                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c531) {
                                                                                                                                        s0 = input.substr(peg$currPos, 4);
                                                                                                                                        peg$currPos += 4;
                                                                                                                                      } else {
                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c532); }
                                                                                                                                      }
                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                        if (input.substr(peg$currPos, 4).toLowerCase() === peg$c533) {
                                                                                                                                          s0 = input.substr(peg$currPos, 4);
                                                                                                                                          peg$currPos += 4;
                                                                                                                                        } else {
                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c534); }
                                                                                                                                        }
                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                          if (input.substr(peg$currPos, 4).toLowerCase() === peg$c535) {
                                                                                                                                            s0 = input.substr(peg$currPos, 4);
                                                                                                                                            peg$currPos += 4;
                                                                                                                                          } else {
                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c536); }
                                                                                                                                          }
                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                            if (input.substr(peg$currPos, 4).toLowerCase() === peg$c537) {
                                                                                                                                              s0 = input.substr(peg$currPos, 4);
                                                                                                                                              peg$currPos += 4;
                                                                                                                                            } else {
                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c538); }
                                                                                                                                            }
                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                              if (input.substr(peg$currPos, 4).toLowerCase() === peg$c539) {
                                                                                                                                                s0 = input.substr(peg$currPos, 4);
                                                                                                                                                peg$currPos += 4;
                                                                                                                                              } else {
                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c540); }
                                                                                                                                              }
                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                if (input.substr(peg$currPos, 4).toLowerCase() === peg$c541) {
                                                                                                                                                  s0 = input.substr(peg$currPos, 4);
                                                                                                                                                  peg$currPos += 4;
                                                                                                                                                } else {
                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c542); }
                                                                                                                                                }
                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                  if (input.substr(peg$currPos, 4).toLowerCase() === peg$c543) {
                                                                                                                                                    s0 = input.substr(peg$currPos, 4);
                                                                                                                                                    peg$currPos += 4;
                                                                                                                                                  } else {
                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c544); }
                                                                                                                                                  }
                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                    if (input.substr(peg$currPos, 4).toLowerCase() === peg$c545) {
                                                                                                                                                      s0 = input.substr(peg$currPos, 4);
                                                                                                                                                      peg$currPos += 4;
                                                                                                                                                    } else {
                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c546); }
                                                                                                                                                    }
                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                      if (input.substr(peg$currPos, 4).toLowerCase() === peg$c547) {
                                                                                                                                                        s0 = input.substr(peg$currPos, 4);
                                                                                                                                                        peg$currPos += 4;
                                                                                                                                                      } else {
                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c548); }
                                                                                                                                                      }
                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                        if (input.substr(peg$currPos, 4).toLowerCase() === peg$c549) {
                                                                                                                                                          s0 = input.substr(peg$currPos, 4);
                                                                                                                                                          peg$currPos += 4;
                                                                                                                                                        } else {
                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c550); }
                                                                                                                                                        }
                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                          if (input.substr(peg$currPos, 4).toLowerCase() === peg$c551) {
                                                                                                                                                            s0 = input.substr(peg$currPos, 4);
                                                                                                                                                            peg$currPos += 4;
                                                                                                                                                          } else {
                                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c552); }
                                                                                                                                                          }
                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                            if (input.substr(peg$currPos, 4).toLowerCase() === peg$c553) {
                                                                                                                                                              s0 = input.substr(peg$currPos, 4);
                                                                                                                                                              peg$currPos += 4;
                                                                                                                                                            } else {
                                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c554); }
                                                                                                                                                            }
                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                              if (input.substr(peg$currPos, 4).toLowerCase() === peg$c549) {
                                                                                                                                                                s0 = input.substr(peg$currPos, 4);
                                                                                                                                                                peg$currPos += 4;
                                                                                                                                                              } else {
                                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c550); }
                                                                                                                                                              }
                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                if (input.substr(peg$currPos, 3).toLowerCase() === peg$c555) {
                                                                                                                                                                  s0 = input.substr(peg$currPos, 3);
                                                                                                                                                                  peg$currPos += 3;
                                                                                                                                                                } else {
                                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c556); }
                                                                                                                                                                }
                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                  if (input.substr(peg$currPos, 3).toLowerCase() === peg$c557) {
                                                                                                                                                                    s0 = input.substr(peg$currPos, 3);
                                                                                                                                                                    peg$currPos += 3;
                                                                                                                                                                  } else {
                                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c558); }
                                                                                                                                                                  }
                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                    if (input.substr(peg$currPos, 3).toLowerCase() === peg$c559) {
                                                                                                                                                                      s0 = input.substr(peg$currPos, 3);
                                                                                                                                                                      peg$currPos += 3;
                                                                                                                                                                    } else {
                                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c560); }
                                                                                                                                                                    }
                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                      if (input.substr(peg$currPos, 3).toLowerCase() === peg$c561) {
                                                                                                                                                                        s0 = input.substr(peg$currPos, 3);
                                                                                                                                                                        peg$currPos += 3;
                                                                                                                                                                      } else {
                                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c562); }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parseingredient() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsephrase();
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsews();
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsews();
        }
        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 47) {
            s3 = peg$c563;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c564); }
          }
          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsews();
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsews();
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$currPos;
              s6 = peg$parsephrase();
              if (s6 !== peg$FAILED) {
                s5 = input.substring(s5, peg$currPos);
              } else {
                s5 = s6;
              }
              if (s5 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c565(s1, s5);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsephrase();
        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c566(s1);
        }
        s0 = s1;
      }

      return s0;
    }

    function peg$parsealphanumericPhrase() {
      var s0, s1, s2, s3, s4, s5, s6;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsemixedWord();
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$currPos;
        s5 = peg$parsespace();
        if (s5 !== peg$FAILED) {
          s6 = peg$parsemixedWord();
          if (s6 !== peg$FAILED) {
            s5 = [s5, s6];
            s4 = s5;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
        } else {
          peg$currPos = s4;
          s4 = peg$FAILED;
        }
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$currPos;
          s5 = peg$parsespace();
          if (s5 !== peg$FAILED) {
            s6 = peg$parsemixedWord();
            if (s6 !== peg$FAILED) {
              s5 = [s5, s6];
              s4 = s5;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
        }
        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        s0 = input.substring(s0, peg$currPos);
      } else {
        s0 = s1;
      }

      return s0;
    }

    function peg$parsemixedWord() {
      var s0, s1, s2, s3;

      s0 = [];
      s1 = peg$parseletter();
      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          s1 = peg$parseletter();
        }
      } else {
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = [];
        s1 = peg$parseinteger();
        if (s1 !== peg$FAILED) {
          while (s1 !== peg$FAILED) {
            s0.push(s1);
            s1 = peg$parseinteger();
          }
        } else {
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = [];
          if (input.charCodeAt(peg$currPos) === 40) {
            s2 = peg$c389;
            peg$currPos++;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c390); }
          }
          if (s2 !== peg$FAILED) {
            while (s2 !== peg$FAILED) {
              s1.push(s2);
              if (input.charCodeAt(peg$currPos) === 40) {
                s2 = peg$c389;
                peg$currPos++;
              } else {
                s2 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c390); }
              }
            }
          } else {
            s1 = peg$FAILED;
          }
          if (s1 !== peg$FAILED) {
            s2 = [];
            s3 = peg$parsephrase();
            if (s3 !== peg$FAILED) {
              while (s3 !== peg$FAILED) {
                s2.push(s3);
                s3 = peg$parsephrase();
              }
            } else {
              s2 = peg$FAILED;
            }
            if (s2 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 41) {
                s3 = peg$c391;
                peg$currPos++;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c392); }
              }
              if (s3 !== peg$FAILED) {
                s1 = [s1, s2, s3];
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
      }

      return s0;
    }

    function peg$parsecomment() {
      var s0, s1, s2, s3, s4, s5, s6, s7;

      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      s3 = peg$parsews();
      if (s3 === peg$FAILED) {
        s3 = null;
      }
      if (s3 !== peg$FAILED) {
        s4 = [];
        if (input.charCodeAt(peg$currPos) === 44) {
          s5 = peg$c567;
          peg$currPos++;
        } else {
          s5 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c568); }
        }
        if (s5 !== peg$FAILED) {
          while (s5 !== peg$FAILED) {
            s4.push(s5);
            if (input.charCodeAt(peg$currPos) === 44) {
              s5 = peg$c567;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c568); }
            }
          }
        } else {
          s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
          s5 = peg$parsews();
          if (s5 !== peg$FAILED) {
            s3 = [s3, s4, s5];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parsealphanumericPhrase();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c569(s1, s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$currPos;
        s3 = peg$parsews();
        if (s3 === peg$FAILED) {
          s3 = null;
        }
        if (s3 !== peg$FAILED) {
          s4 = [];
          s5 = peg$parsedashes();
          if (s5 !== peg$FAILED) {
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsedashes();
            }
          } else {
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s5 = [];
            s6 = peg$parsews();
            if (s6 !== peg$FAILED) {
              while (s6 !== peg$FAILED) {
                s5.push(s6);
                s6 = peg$parsews();
              }
            } else {
              s5 = peg$FAILED;
            }
            if (s5 !== peg$FAILED) {
              s3 = [s3, s4, s5];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s1 = input.substring(s1, peg$currPos);
        } else {
          s1 = s2;
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parsealphanumericPhrase();
          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c569(s1, s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$currPos;
          s2 = peg$currPos;
          s3 = peg$parsews();
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          if (s3 !== peg$FAILED) {
            s4 = [];
            if (input.charCodeAt(peg$currPos) === 40) {
              s5 = peg$c389;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c390); }
            }
            if (s5 !== peg$FAILED) {
              while (s5 !== peg$FAILED) {
                s4.push(s5);
                if (input.charCodeAt(peg$currPos) === 40) {
                  s5 = peg$c389;
                  peg$currPos++;
                } else {
                  s5 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c390); }
                }
              }
            } else {
              s4 = peg$FAILED;
            }
            if (s4 !== peg$FAILED) {
              s3 = [s3, s4];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
          if (s2 !== peg$FAILED) {
            s1 = input.substring(s1, peg$currPos);
          } else {
            s1 = s2;
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parsealphanumericPhrase();
            if (s2 !== peg$FAILED) {
              s3 = [];
              if (input.charCodeAt(peg$currPos) === 41) {
                s4 = peg$c391;
                peg$currPos++;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c392); }
              }
              if (s4 !== peg$FAILED) {
                while (s4 !== peg$FAILED) {
                  s3.push(s4);
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s4 = peg$c391;
                    peg$currPos++;
                  } else {
                    s4 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c392); }
                  }
                }
              } else {
                s3 = peg$FAILED;
              }
              if (s3 !== peg$FAILED) {
                s4 = [];
                if (input.charCodeAt(peg$currPos) === 44) {
                  s5 = peg$c567;
                  peg$currPos++;
                } else {
                  s5 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c568); }
                }
                while (s5 !== peg$FAILED) {
                  s4.push(s5);
                  if (input.charCodeAt(peg$currPos) === 44) {
                    s5 = peg$c567;
                    peg$currPos++;
                  } else {
                    s5 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c568); }
                  }
                }
                if (s4 !== peg$FAILED) {
                  s5 = [];
                  s6 = peg$parsews();
                  while (s6 !== peg$FAILED) {
                    s5.push(s6);
                    s6 = peg$parsews();
                  }
                  if (s5 !== peg$FAILED) {
                    s6 = [];
                    s7 = peg$parsealphanumericPhrase();
                    while (s7 !== peg$FAILED) {
                      s6.push(s7);
                      s7 = peg$parsealphanumericPhrase();
                    }
                    if (s6 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c570(s1, s2, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
      }

      return s0;
    }

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail(peg$endExpectation());
      }

      throw peg$buildStructuredError(
        peg$maxFailExpected,
        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
        peg$maxFailPos < input.length
          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
      );
    }
  }

  return {
    SyntaxError: peg$SyntaxError,
    parse:       peg$parse
  };
})();
